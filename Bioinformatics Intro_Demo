{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "4352a18e",
   "metadata": {},
   "source": [
    "### Sequence Validator"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "3c30d2c8",
   "metadata": {},
   "outputs": [],
   "source": [
    "nucleotides = ('A', 'T', 'C', 'G')\n",
    "\n",
    "def seq_validator(sequence):\n",
    "    temp_seq = sequence.upper()\n",
    "    for seq in temp_seq:\n",
    "        if seq not in nucleotides:\n",
    "            return False\n",
    "    print('sequence is valid')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "59d0f309",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "sequence is valid\n"
     ]
    }
   ],
   "source": [
    "seq_validator('GTAC')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "c37d42d3",
   "metadata": {},
   "outputs": [],
   "source": [
    "nucleotides = ('A', 'T', 'C', 'G')\n",
    "\n",
    "def seq_validator(sequence):\n",
    "    for seq in sequence:\n",
    "        if seq.upper() not in nucleotides:\n",
    "            return False\n",
    "    print('sequence is valid')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "52e18197",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "sequence is valid\n"
     ]
    }
   ],
   "source": [
    "seq_validator('tcag')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "db68cf7e",
   "metadata": {},
   "source": [
    "### Reading multi-FASTA Files"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "bf45cc56",
   "metadata": {},
   "outputs": [
    {
     "ename": "ModuleNotFoundError",
     "evalue": "No module named 'Bio'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[1], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mBio\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m SeqIO\n\u001b[0;32m      2\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mpandas\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m \u001b[38;5;21;01mpd\u001b[39;00m\n\u001b[0;32m      3\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mos\u001b[39;00m\n",
      "\u001b[1;31mModuleNotFoundError\u001b[0m: No module named 'Bio'"
     ]
    }
   ],
   "source": [
    "from Bio import SeqIO\n",
    "import pandas as pd\n",
    "import os"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "ba4081a9",
   "metadata": {},
   "outputs": [],
   "source": [
    "seq_object = SeqIO.parse('multi-fasta.fa', 'fasta')\n",
    "sequences = []\n",
    "\n",
    "for seq in seq_object:\n",
    "    sequences.append(seq)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "c082362e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[SeqRecord(seq=Seq('GTCTATTCATTCCTTTTTCTCTCCTTTCAGCATTTTATTGAGCCTCTCATCAAC...TTA'), id='CP029082.1', name='CP029082.1', description='CP029082.1 Staphylococcus aureus strain AR465 chromosome, complete genome', dbxrefs=[]),\n",
       " SeqRecord(seq=Seq('ATGTCGGAAAAAGAAATTTGGGAAAAAGTGCTTGAAATTGCTCAAGAAAAATTA...TTT'), id='CP030138.1', name='CP030138.1', description='CP030138.1 Staphylococcus aureus strain M48 chromosome, complete genome', dbxrefs=[]),\n",
       " SeqRecord(seq=Seq('TAATTGGAGCCGTTCTTATGGACCTACATGATGAATGGATTTATTCTTCAAGAA...CTC'), id='CP039157.1', name='CP039157.1', description='CP039157.1 Staphylococcus aureus strain P10 chromosome, complete genome', dbxrefs=[]),\n",
       " SeqRecord(seq=Seq('TTCAGTGTAAAATGTACTTGGGTCATGTAAAAGTCCTCCTGGGTATGTTTTTGT...ACC'), id='CP039167.1', name='CP039167.1', description='CP039167.1 Staphylococcus aureus strain R50 chromosome, complete genome', dbxrefs=[]),\n",
       " SeqRecord(seq=Seq('CGATTAAAGATAGAAATACACGATGCGAGCAATCAAATTTCATAACATCACCAT...TAT'), id='CP013957.1', name='CP013957.1', description='CP013957.1 Staphylococcus aureus strain V521, complete genome', dbxrefs=[])]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sequences"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "30519d23",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(sequences)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "9bf9768e",
   "metadata": {},
   "outputs": [],
   "source": [
    "first_seq = sequences[0] #reading the first sequence"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "220680a7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "SeqRecord(seq=Seq('GTCTATTCATTCCTTTTTCTCTCCTTTCAGCATTTTATTGAGCCTCTCATCAAC...TTA'), id='CP029082.1', name='CP029082.1', description='CP029082.1 Staphylococcus aureus strain AR465 chromosome, complete genome', dbxrefs=[])"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "first_seq"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "903fa9c2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'CP029082.1'"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "first_seq.id"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "7a5bd0bb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(Seq('GTCTATTCATTCCTTTTTCTCTCCTTTCAGCATTTTATTGAGCCTCTCATCAAC...TTA'), 2911287)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "first_seq.seq, len(first_seq.seq)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "81d72f21",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'CP029082.1 Staphylococcus aureus strain AR465 chromosome, complete genome'"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "first_seq.description"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "a79d0c48",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CP029082.1 Staphylococcus aureus strain AR465 chromosome, complete genome CP029082.1 2911287\n",
      "CP030138.1 Staphylococcus aureus strain M48 chromosome, complete genome CP030138.1 3050015\n",
      "CP039157.1 Staphylococcus aureus strain P10 chromosome, complete genome CP039157.1 2970728\n",
      "CP039167.1 Staphylococcus aureus strain R50 chromosome, complete genome CP039167.1 2866643\n",
      "CP013957.1 Staphylococcus aureus strain V521, complete genome CP013957.1 3085555\n"
     ]
    }
   ],
   "source": [
    "for rec in sequences:\n",
    "    print(rec.description, rec.id, len(rec))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "85acacef",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Analysis Completed\n",
      "Analysis Completed\n",
      "Analysis Completed\n",
      "Analysis Completed\n",
      "Analysis Completed\n"
     ]
    }
   ],
   "source": [
    "seq_ids = []\n",
    "seq_lengths = []\n",
    "sequence = []\n",
    "\n",
    "for rec in sequences:\n",
    "    seq_ids.append(rec.id)\n",
    "    sequence.append(rec.seq)\n",
    "    seq_lengths.append(len(rec))\n",
    "    print('Analysis Completed')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "bf38ab09",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['CP029082.1', 'CP030138.1', 'CP039157.1', 'CP039167.1', 'CP013957.1']"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "seq_ids"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "e9bb781b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[2911287, 3050015, 2970728, 2866643, 3085555]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "seq_lengths"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "f7782df6",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.DataFrame()\n",
    "df['Seq_ID'] = seq_ids\n",
    "df['Seq_Length'] = seq_lengths"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "6a8ae820",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Seq_ID</th>\n",
       "      <th>Seq_Length</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>CP029082.1</td>\n",
       "      <td>2911287</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>CP030138.1</td>\n",
       "      <td>3050015</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>CP039157.1</td>\n",
       "      <td>2970728</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>CP039167.1</td>\n",
       "      <td>2866643</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>CP013957.1</td>\n",
       "      <td>3085555</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Seq_ID  Seq_Length\n",
       "0  CP029082.1     2911287\n",
       "1  CP030138.1     3050015\n",
       "2  CP039157.1     2970728\n",
       "3  CP039167.1     2866643\n",
       "4  CP013957.1     3085555"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "2adda95a",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.to_csv('Sequence Analysis.csv', index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "97964035",
   "metadata": {},
   "source": [
    "### Reading GenBank Files"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "9a581a17",
   "metadata": {},
   "outputs": [],
   "source": [
    "genbank_object = SeqIO.read('sequence.gb', 'gb') #note that we are using\n",
    "# '.read', because genbank files always contain one record"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "a7a8a408",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'CP000325.1'"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "genbank_object.id"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "10381063",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'CP000325'"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "genbank_object.name"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "e30791ba",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5631606"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(genbank_object.seq) #length of the sequence"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "313d0f32",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Mycobacterium ulcerans Agy99, complete genome'"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "genbank_object.description"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "b829cc9c",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'molecule_type': 'DNA',\n",
       " 'topology': 'circular',\n",
       " 'data_file_division': 'BCT',\n",
       " 'date': '30-JAN-2014',\n",
       " 'accessions': ['CP000325'],\n",
       " 'sequence_version': 1,\n",
       " 'keywords': [''],\n",
       " 'source': 'Mycobacterium ulcerans Agy99',\n",
       " 'organism': 'Mycobacterium ulcerans Agy99',\n",
       " 'taxonomy': ['Bacteria',\n",
       "  'Actinobacteria',\n",
       "  'Corynebacteriales',\n",
       "  'Mycobacteriaceae',\n",
       "  'Mycobacterium'],\n",
       " 'references': [Reference(title='Reductive evolution and niche adaptation inferred from the genome of Mycobacterium ulcerans, the causative agent of Buruli ulcer', ...),\n",
       "  Reference(title='Direct Submission', ...)],\n",
       " 'comment': 'Source DNA is available from Dr Tim Stinear, Department\\nMicrobiology, Monash University, Melbourne, Australia,\\ntim.stinear@med.monash.edu.au; Bacteria are available from Dr Janet\\nFyfe, Mycobacterial Reference Laboratory, Victorian Infectious\\nDiseases Reference Laboratory, Melbourne, Australia,\\nJanet.Fyfe@mh.org.au.'}"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "genbank_object.annotations"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "2f5c5a48",
   "metadata": {},
   "outputs": [],
   "source": [
    "# genbank_object.features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "3f15874a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['misc_feature',\n",
       " 'mobile_element',\n",
       " 'misc_RNA',\n",
       " 'rRNA',\n",
       " 'tRNA',\n",
       " 'repeat_region',\n",
       " 'source',\n",
       " 'CDS',\n",
       " 'gene']"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "features = genbank_object.features\n",
    "feature_types = [ feature.type for feature in features ]\n",
    "feature_types = set(feature_types) # we first use set, so as not to repeat a particular feature twice i.e. to make the list distinct\n",
    "feature_types = list(feature_types)\n",
    "feature_types"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "1533c1e4",
   "metadata": {},
   "outputs": [],
   "source": [
    "feature_types = ['rRNA',\n",
    " 'gene',\n",
    " 'mobile_element',\n",
    " 'CDS',\n",
    " 'tRNA']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "fd01d260",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['rRNA', 'gene', 'mobile_element', 'CDS', 'tRNA']"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "feature_types #we craeted a list of the features we need"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "2f4da667",
   "metadata": {},
   "outputs": [],
   "source": [
    "# features is the same as genbank_object.features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "57432855",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "number_of_feature:  3\n",
      "number_of_feature:  4981\n",
      "number_of_feature:  292\n",
      "number_of_feature:  4160\n",
      "number_of_feature:  45\n"
     ]
    }
   ],
   "source": [
    "for feature in feature_types:\n",
    "    all_features = [i for i in features if i.type==feature]\n",
    "    number_of_feature = len(all_features)\n",
    "    print('number_of_feature: ', number_of_feature)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "348f819b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "rRNA:3\n",
      "gene:4981\n",
      "mobile_element:292\n",
      "CDS:4160\n",
      "tRNA:45\n"
     ]
    }
   ],
   "source": [
    "for feature in feature_types:\n",
    "    all_features = [i for i in genbank_object.features if i.type==feature]\n",
    "    number_of_feature = len(all_features) #counts the length of each feature\n",
    "    print('%s:%d'%(feature, number_of_feature))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "26c7e498",
   "metadata": {},
   "source": [
    "### GC content of sequences in multi-fasta files"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "eeb6da58",
   "metadata": {},
   "outputs": [],
   "source": [
    "from Bio.SeqUtils import GC\n",
    "import glob"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "51d4914d",
   "metadata": {},
   "outputs": [],
   "source": [
    "fasta_files = glob.glob('%s/*.fasta'%'sequences') #using *.fasta will ensure that even if there are other files that are not\n",
    "# fasta files in the folder, only the fasta files will be selected"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "eb2a11a7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# let's confirm that there are only 5 fasta files in the folder\n",
    "len(fasta_files)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "080db286",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'sequences\\\\AR465 .fasta'"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fasta_files[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "38cf948b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['sequences\\\\AR465 .fasta',\n",
       " 'sequences\\\\M48 .fasta',\n",
       " 'sequences\\\\P10 .fasta',\n",
       " 'sequences\\\\R50 .fasta',\n",
       " 'sequences\\\\V521.fasta']"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fasta_files"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "cdfe97a7",
   "metadata": {},
   "outputs": [],
   "source": [
    "def gc_calculator(fasta):\n",
    "    seq_obj = SeqIO.read(fasta, 'fasta')\n",
    "    sequence = seq_obj.seq\n",
    "    seq_name = seq_obj.name\n",
    "    gc_content = GC(sequence)\n",
    "    gc_content = round(gc_content, 2)\n",
    "    \n",
    "    filename = os.path.split(fasta)\n",
    "    filename = filename[1]\n",
    "    filename = filename.strip(' .fasta')\n",
    "    \n",
    "    return filename,gc_content"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "55228636",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "('AR465', 32.92)\n",
      "('M48', 32.81)\n",
      "('P10', 32.71)\n",
      "('R50', 32.91)\n",
      "('V521', 32.81)\n"
     ]
    }
   ],
   "source": [
    "for fasta in fasta_files:\n",
    "    print(gc_calculator(fasta))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "69b353ca",
   "metadata": {},
   "outputs": [],
   "source": [
    "filenames = []\n",
    "gc_contents = []"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "9f72a758",
   "metadata": {},
   "outputs": [],
   "source": [
    "def gc_calculator(fasta):\n",
    "    seq_obj = SeqIO.read(fasta, 'fasta')\n",
    "    sequence = seq_obj.seq\n",
    "    seq_name = seq_obj.name\n",
    "    gc_content = GC(sequence)\n",
    "    gc_content = round(gc_content, 2)\n",
    "    \n",
    "    filename = os.path.split(fasta)\n",
    "    filename = filename[1]\n",
    "    filename = filename.strip(' .fasta')\n",
    "    \n",
    "    print('GC content successfully calculated')\n",
    "    return filename,gc_content"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "9e020fab",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GC content successfully calculated\n",
      "GC content successfully calculated\n",
      "GC content successfully calculated\n",
      "GC content successfully calculated\n",
      "GC content successfully calculated\n"
     ]
    }
   ],
   "source": [
    "for fasta in fasta_files:\n",
    "    filename,gc_content = gc_calculator(fasta)\n",
    "    filenames.append(filename)\n",
    "    gc_contents.append(gc_content)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "15dccb87",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'AR465'"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "filenames[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "1cfddd43",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "32.92"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gc_contents[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "c1c9cb0a",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.DataFrame()\n",
    "df['Filename'] = filenames\n",
    "df['GC Content'] = gc_contents"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "56bed9ed",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Filename</th>\n",
       "      <th>GC Content</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>AR465</td>\n",
       "      <td>32.92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>M48</td>\n",
       "      <td>32.81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>P10</td>\n",
       "      <td>32.71</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>R50</td>\n",
       "      <td>32.91</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>V521</td>\n",
       "      <td>32.81</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Filename  GC Content\n",
       "0    AR465       32.92\n",
       "1      M48       32.81\n",
       "2      P10       32.71\n",
       "3      R50       32.91\n",
       "4     V521       32.81"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "a479df5f",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.to_csv('sequences\\GC Contents.csv', index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "189c2a13",
   "metadata": {},
   "source": [
    "### Extracting (Gene) Sequence from GenBank Files (In NCBI)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "96849734",
   "metadata": {},
   "outputs": [],
   "source": [
    "gb_obj = SeqIO.read('sequence1.gb', 'gb')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "63606906",
   "metadata": {},
   "outputs": [],
   "source": [
    "# gb_obj.features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "03a97da2",
   "metadata": {},
   "outputs": [],
   "source": [
    "genes = []\n",
    "\n",
    "for feature in gb_obj.features:\n",
    "    if feature.type == 'gene':\n",
    "        genes.append(feature)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "50fd4270",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2872"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(genes)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "de9a1cc3",
   "metadata": {},
   "outputs": [],
   "source": [
    "gene_of_interest = 'rpoB'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "07808d41",
   "metadata": {},
   "outputs": [],
   "source": [
    "hits = []"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "9a725914",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "gene found\n"
     ]
    }
   ],
   "source": [
    "for gene in genes:\n",
    "    if 'gene' in  gene.qualifiers.keys():\n",
    "        if gene_of_interest == gene.qualifiers['gene'][0]:\n",
    "            hits.append(gene)\n",
    "            print('gene found')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "319058ec",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "OrderedDict([('gene', ['rpmH']),\n",
       "             ('locus_tag', ['SAOUHSC_03055']),\n",
       "             ('db_xref', ['GeneID:3921318'])])"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gene.qualifiers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "158ef9c8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "odict_keys(['gene', 'locus_tag', 'db_xref'])"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gene.qualifiers.keys()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "82e4f6a3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[SeqFeature(FeatureLocation(ExactPosition(522159), ExactPosition(525711), strand=1), type='gene')]"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hits"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "0e4a7e43",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(hits)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "9fd2c026",
   "metadata": {},
   "outputs": [],
   "source": [
    "# hits[1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "285781dd",
   "metadata": {},
   "outputs": [],
   "source": [
    "rpoB = hits[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "dbcb9c86",
   "metadata": {},
   "outputs": [],
   "source": [
    "extracted_sequence = rpoB.extract(gb_obj)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "1fcfbd61",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "SeqRecord(seq=Seq('TTGGCAGGTCAAGTTGTCCAATATGGAAGACATCGTAAACGTAGAAACTACGCG...TAA'), id='NC_007795.1', name='NC_007795', description='Staphylococcus aureus subsp. aureus NCTC 8325 chromosome, complete genome', dbxrefs=[])"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "extracted_sequence"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "b7f543b7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3552"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(extracted_sequence.seq)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "b4db50ec",
   "metadata": {},
   "outputs": [],
   "source": [
    "extracted_sequence.id = 'rpoB'\n",
    "extracted_sequence.description = 'NCTC_8325'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "62e52735",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "37.56"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gc_content = GC(extracted_sequence.seq)\n",
    "round(gc_content,2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "b67549f9",
   "metadata": {},
   "outputs": [],
   "source": [
    "###saving the file as fatsa file\n",
    "# .............\n",
    "# ............."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ace28057",
   "metadata": {},
   "source": [
    "### Extracting Multiple Gene Sequences from GenBank Files"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "6267d846",
   "metadata": {},
   "outputs": [],
   "source": [
    "genome_path = \"Sakai_E_coli.gb\"\n",
    "gene_list_path = \"vir_factors.txt\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "ba3b9db3",
   "metadata": {},
   "outputs": [],
   "source": [
    "with open(gene_list_path, 'r') as input_file:\n",
    "    gene_names = [line.strip('\\n') for line in input_file]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "b752b4d6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "28"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(gene_names)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "5a7a1a0b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'ecpB'"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gene_names[2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "f2304c62",
   "metadata": {},
   "outputs": [],
   "source": [
    "gb_obj = SeqIO.read(genome_path, 'gb')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "f367151a",
   "metadata": {},
   "outputs": [],
   "source": [
    "### extracting 'genes' from the gb file:\n",
    "all_genes = []\n",
    "for feature in gb_obj.features:\n",
    "    if feature.type == 'gene':\n",
    "        all_genes.append(feature)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "57490e52",
   "metadata": {},
   "outputs": [],
   "source": [
    "# all_genes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "e3f0c3ad",
   "metadata": {},
   "outputs": [],
   "source": [
    "### you can also extract the 'gene' feature from the gb file like this:\n",
    "# all_genes = [feature for feature in gb_obj.features if feature.type == 'gene']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "18fa6bcc",
   "metadata": {},
   "outputs": [],
   "source": [
    "# all_genes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "2a39775a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5329"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(all_genes)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "cd92e445",
   "metadata": {},
   "outputs": [],
   "source": [
    "# gene_names"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "480ea68d",
   "metadata": {},
   "outputs": [],
   "source": [
    "gene_sequences = []"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "ca456833",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "gene ecpE found\n",
      "gene ecpD found\n",
      "gene ecpC found\n",
      "gene ecpB found\n",
      "gene ecpA found\n",
      "gene ecpR found\n",
      "gene paa found\n",
      "gene lpfB found\n",
      "gene espF found\n",
      "gene escF found\n",
      "gene espB found\n",
      "gene espD found\n",
      "gene espA found\n",
      "gene sepL found\n",
      "gene escD found\n",
      "gene eae found\n",
      "gene tir found\n",
      "gene escN found\n",
      "gene escV found\n",
      "gene escJ found\n",
      "gene escC found\n",
      "gene escU found\n",
      "gene escT found\n",
      "gene escS found\n",
      "gene ler found\n",
      "gene lpfA found\n"
     ]
    }
   ],
   "source": [
    "for gene in all_genes:\n",
    "    if 'gene' in gene.qualifiers.keys():\n",
    "        gene_name = gene.qualifiers['gene'][0]\n",
    "        if gene_name in gene_names:\n",
    "            extract = gene.extract(gb_obj)\n",
    "            extract.id = gene_name\n",
    "            extract.description = ''\n",
    "            gene_sequences.append(extract)\n",
    "            print('gene %s found' %gene_name)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "2431dac8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "SeqRecord(seq=Seq('ATGAAACCAAATATGATTGTAGGAGCATTAGCGTTAACTTCTGTGTTTATGGCA...TAA'), id='lpfA', name='<unknown name>', description='', dbxrefs=[])"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "extract"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "77c67c19",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "26"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(gene_sequences)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "9c355161",
   "metadata": {},
   "outputs": [],
   "source": [
    "outputfile = '/Users/CHUFESS/Documents/Bioinformatics/Code/virfactors.fasta'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "d832aac6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "26"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "SeqIO.write(gene_sequences, outputfile, 'fasta')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4db0a1d6",
   "metadata": {},
   "source": [
    "### Getting Codons From Sequences"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "5b0c4b84",
   "metadata": {},
   "outputs": [],
   "source": [
    "sequence = 'AUGGGUAGCCCUAAUACUAGUCCUAAAAAG'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "50300f33",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "30"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "length = len(sequence)\n",
    "length"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "2db6a6a4",
   "metadata": {},
   "outputs": [],
   "source": [
    "codons = []\n",
    "for i in range(0,30,3):\n",
    "    codon = sequence[i:i+3]\n",
    "    codons.append(codon)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "1f3dc537",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['AUG', 'GGU', 'AGC', 'CCU', 'AAU', 'ACU', 'AGU', 'CCU', 'AAA', 'AAG']"
      ]
     },
     "execution_count": 88,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "codons"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "04634e41",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of codon is 10\n"
     ]
    }
   ],
   "source": [
    "number_of_codons = len(codons)\n",
    "print('Number of codon is %d' %number_of_codons)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "d0d6df6e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "### let's count the number of 'CCU's\n",
    "codons.count('CCU')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "e98ab80f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "### lets count the start codon(AUG)\n",
    "codons.count('AUG')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "e19c956e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "### lets count the start codons\n",
    "codons.count('UAA') + codons.count('UAG') + codons.count('UGA')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "6a8b0bef",
   "metadata": {},
   "outputs": [],
   "source": [
    "### Let's create another sequence and replace all stop codons with '*'\n",
    "sequence2 = 'AUGGGUAGCCCUGAUACUAGUCCUUAAAAG'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "40cac76d",
   "metadata": {},
   "outputs": [],
   "source": [
    "codons = []\n",
    "for x in range(0,30,3):\n",
    "    codon = sequence2[x:x+3]\n",
    "    codons.append(codon)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "35679452",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['AUG', 'GGU', 'AGC', 'CCU', 'GAU', 'ACU', 'AGU', 'CCU', 'UAA', 'AAG']"
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "codons"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "11fe0146",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1"
      ]
     },
     "execution_count": 96,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "stop_codons = codons.count('UAA') + codons.count('UGA') + codons.count('UAG')\n",
    "(stop_codons)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "e3baba0a",
   "metadata": {},
   "outputs": [],
   "source": [
    "CODONS = [] # CODONS capitalized here represents codons with stop codons as *\n",
    "for i in codons:\n",
    "    if i == 'UAA' or i == 'UGA' or i == 'UAG':\n",
    "        i = '*'\n",
    "    CODONS.append(i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "de1719fa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['AUG', 'GGU', 'AGC', 'CCU', 'GAU', 'ACU', 'AGU', 'CCU', '*', 'AAG']"
      ]
     },
     "execution_count": 98,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "CODONS"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "f41d5a6d",
   "metadata": {},
   "outputs": [],
   "source": [
    "### let's craete a function for it, so that we can always reuse it"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "id": "cb223505",
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_codon(sequence):\n",
    "    codons = []\n",
    "    length = len(sequence)\n",
    "    for x in range(0,length,3):\n",
    "        codon = sequence[x:x+3]\n",
    "        codons.append(codon)\n",
    "    \n",
    "    return codons"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "id": "2d8ecd16",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['AUG', 'GGU', 'AGC', 'CCU', 'GAU', 'ACU', 'AGU', 'CCU', 'UAA', 'AAG']"
      ]
     },
     "execution_count": 101,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "get_codon('AUGGGUAGCCCUGAUACUAGUCCUUAAAAG')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "id": "dea3a349",
   "metadata": {},
   "outputs": [],
   "source": [
    "### In case you have a list of sequences, as in:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "id": "30b95013",
   "metadata": {},
   "outputs": [],
   "source": [
    "seqs = ['AUGGGUAGC', 'CUGAUACUA', 'UCCUUAAAG']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "id": "b49ed760",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['AUG', 'GGU', 'AGC']\n",
      "['CUG', 'AUA', 'CUA']\n",
      "['UCC', 'UUA', 'AAG']\n"
     ]
    }
   ],
   "source": [
    "for i in seqs:\n",
    "    print(get_codon(i))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1aa45f8b",
   "metadata": {},
   "source": [
    "### Counting Features in GenBank Files"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "b8395c23",
   "metadata": {},
   "outputs": [],
   "source": [
    "from collections import Counter"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "id": "d956edc4",
   "metadata": {},
   "outputs": [],
   "source": [
    "file_path = 'Staphylococcus_M48.gb'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "id": "51491d6f",
   "metadata": {},
   "outputs": [],
   "source": [
    " gb_object = SeqIO.read(file_path, 'gb')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "id": "82567888",
   "metadata": {},
   "outputs": [],
   "source": [
    "# gb_object.features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "id": "ffbe2a10",
   "metadata": {},
   "outputs": [],
   "source": [
    "all_feature_types = [feature.type for feature in gb_object.features]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "id": "fb774c56",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "6513"
      ]
     },
     "execution_count": 110,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(all_feature_types)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "id": "a78929e2",
   "metadata": {},
   "outputs": [],
   "source": [
    "# all_feature_types"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "id": "fa1162df",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'CDS', 'gene', 'ncRNA', 'rRNA', 'regulatory', 'source', 'tRNA', 'tmRNA'}"
      ]
     },
     "execution_count": 112,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "feature_types = set(all_feature_types)\n",
    "feature_types"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "id": "bde2c38a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Counter({'source': 1,\n",
       "         'gene': 3251,\n",
       "         'CDS': 3171,\n",
       "         'regulatory': 10,\n",
       "         'tRNA': 60,\n",
       "         'ncRNA': 3,\n",
       "         'rRNA': 16,\n",
       "         'tmRNA': 1})"
      ]
     },
     "execution_count": 113,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "feature_count = Counter(all_feature_types)\n",
    "feature_count"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "id": "ace7bc34",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict_keys(['source', 'gene', 'CDS', 'regulatory', 'tRNA', 'ncRNA', 'rRNA', 'tmRNA'])"
      ]
     },
     "execution_count": 114,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "feature_count.keys()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "id": "2c28ff4e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict_values([1, 3251, 3171, 10, 60, 3, 16, 1])"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "feature_count.values()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "id": "e2635bed",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3251"
      ]
     },
     "execution_count": 116,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "feature_count['gene'] #accessing the v alue of each key in the dictionary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "id": "e1d284c7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3171"
      ]
     },
     "execution_count": 117,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "feature_count['CDS']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "id": "fb672148",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict_items([('source', 1), ('gene', 3251), ('CDS', 3171), ('regulatory', 10), ('tRNA', 60), ('ncRNA', 3), ('rRNA', 16), ('tmRNA', 1)])"
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "feature_count.items()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "id": "6c589ba8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "source 1\n",
      "gene 3251\n",
      "CDS 3171\n",
      "regulatory 10\n",
      "tRNA 60\n",
      "ncRNA 3\n",
      "rRNA 16\n",
      "tmRNA 1\n"
     ]
    }
   ],
   "source": [
    "for key,value in feature_count.items():\n",
    "    print(key, value)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "id": "da41a2b1",
   "metadata": {},
   "outputs": [],
   "source": [
    "### you can delete features you don't need, e.g.\n",
    "del feature_count['source']\n",
    "del feature_count['regulatory']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "id": "219eee3e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 121,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "feature_count['source'] ##gives 0 as it has been deleted"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "id": "546d3f4d",
   "metadata": {},
   "outputs": [],
   "source": [
    "feature_count.get('regulatory')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "id": "b9efa21b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict_keys(['gene', 'CDS', 'tRNA', 'ncRNA', 'rRNA', 'tmRNA'])"
      ]
     },
     "execution_count": 123,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "feature_count.keys() # source and regulatory are no longer there"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "id": "fa6c4139",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Counter({'gene': 3251,\n",
       "         'CDS': 3171,\n",
       "         'tRNA': 60,\n",
       "         'ncRNA': 3,\n",
       "         'rRNA': 16,\n",
       "         'tmRNA': 1})"
      ]
     },
     "execution_count": 124,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "feature_count"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "id": "d2cb6a18",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.DataFrame()\n",
    "df['Feature'] = feature_count.keys()\n",
    "df['Value'] = feature_count.values()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "id": "2a6ae380",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Feature</th>\n",
       "      <th>Value</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>gene</td>\n",
       "      <td>3251</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>CDS</td>\n",
       "      <td>3171</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>tRNA</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>ncRNA</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>rRNA</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>tmRNA</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Feature  Value\n",
       "0    gene   3251\n",
       "1     CDS   3171\n",
       "2    tRNA     60\n",
       "3   ncRNA      3\n",
       "4    rRNA     16\n",
       "5   tmRNA      1"
      ]
     },
     "execution_count": 126,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "id": "5608702c",
   "metadata": {},
   "outputs": [],
   "source": [
    "### Save it to csv"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "10bd7562",
   "metadata": {},
   "source": [
    "### Counting Features in Multiple GenBank Files"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "id": "8ff700f8",
   "metadata": {},
   "outputs": [],
   "source": [
    "file_dir = 'gb_sequences'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "id": "d4724842",
   "metadata": {},
   "outputs": [],
   "source": [
    "gb_files = glob.glob('%s/*.gb'%file_dir)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "id": "3298a05c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['gb_sequences\\\\AR465.gb',\n",
       " 'gb_sequences\\\\M48.gb',\n",
       " 'gb_sequences\\\\P10.gb',\n",
       " 'gb_sequences\\\\R50.gb',\n",
       " 'gb_sequences\\\\V521 .gb']"
      ]
     },
     "execution_count": 130,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gb_files"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "id": "4fbd9cee",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5"
      ]
     },
     "execution_count": 131,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(gb_files)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "id": "700bccb6",
   "metadata": {},
   "outputs": [],
   "source": [
    "def count_features(gb_file):\n",
    "    gb_object = SeqIO.read(gb_file, 'gb')\n",
    "    features = gb_object.features\n",
    "    feature_types = [feature.type for feature in features]\n",
    "    feature_count = Counter(feature_types)\n",
    "    print('Features Counted')\n",
    "    \n",
    "    df = pd.DataFrame()\n",
    "    df['Feature'] = feature_count.keys()\n",
    "    df['Count'] = feature_count.values()\n",
    "    \n",
    "    directory, filename = os.path.split(gb_file)\n",
    "    filename = filename.strip('.gb')\n",
    "    \n",
    "    save_folder = '/Users/CHUFESS/Documents/Bioinformatics/Code/gb_sequences/'\n",
    "    output_file = '%s/%s.csv'%(save_folder,filename)\n",
    "    \n",
    "    df.to_csv(output_file, index=False)\n",
    "    \n",
    "    print('Files Saved')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "id": "cd949f57",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Features Counted\n",
      "Files Saved\n",
      "Features Counted\n",
      "Files Saved\n",
      "Features Counted\n",
      "Files Saved\n",
      "Features Counted\n",
      "Files Saved\n",
      "Features Counted\n",
      "Files Saved\n"
     ]
    }
   ],
   "source": [
    "for file in gb_files:\n",
    "    count_features(file)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c167994c",
   "metadata": {},
   "source": [
    "### Storing All Feature Count Result In A Single File"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "id": "5bd3d68d",
   "metadata": {},
   "outputs": [],
   "source": [
    "file_dir = 'gb_sequences'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "id": "b0a6c0db",
   "metadata": {},
   "outputs": [],
   "source": [
    "gb_files = glob.glob('%s/*.gb'%file_dir)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "id": "43f88f7b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['gb_sequences\\\\AR465.gb',\n",
       " 'gb_sequences\\\\M48.gb',\n",
       " 'gb_sequences\\\\P10.gb',\n",
       " 'gb_sequences\\\\R50.gb',\n",
       " 'gb_sequences\\\\V521 .gb']"
      ]
     },
     "execution_count": 136,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gb_files"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "id": "9112d3e2",
   "metadata": {},
   "outputs": [],
   "source": [
    "def file_reader(gfile):\n",
    "    gb_obj = SeqIO.read(gfile, 'gb')\n",
    "    features = gb_obj.features\n",
    "    feature_types = [feature.type for feature in features]\n",
    "    return feature_types"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "id": "df17cb10",
   "metadata": {},
   "outputs": [],
   "source": [
    "def feature_counter(feature_types):\n",
    "    feature_count = Counter(feature_types)\n",
    "    print('Features Counted')\n",
    "    return feature_count"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "id": "2cb92932",
   "metadata": {},
   "outputs": [],
   "source": [
    "def all_features_scanner(files):\n",
    "    all_features = []\n",
    "    for gb_file in gb_files:\n",
    "        feature_types = file_reader(gb_file) #remember that the file_reader function returns the feature types\n",
    "        all_features.extend(feature_types)\n",
    "        \n",
    "    all_features = set(all_features)\n",
    "    all_features = list(all_features)\n",
    "    \n",
    "    print('All features have been counted')\n",
    "    return all_features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "id": "843fadcd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "All features have been counted\n"
     ]
    }
   ],
   "source": [
    "all_features = all_features_scanner(gb_files)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "id": "4b8c3419",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['regulatory',\n",
       " 'tmRNA',\n",
       " 'ncRNA',\n",
       " 'misc_binding',\n",
       " 'rRNA',\n",
       " 'tRNA',\n",
       " 'source',\n",
       " 'CDS',\n",
       " 'gene']"
      ]
     },
     "execution_count": 141,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "all_features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 142,
   "id": "42b0c16e",
   "metadata": {},
   "outputs": [],
   "source": [
    "allfeature_count = []"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "id": "c6b09fe6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Features Counted\n",
      "Features Counted\n",
      "Features Counted\n",
      "Features Counted\n",
      "Features Counted\n"
     ]
    }
   ],
   "source": [
    "for gb_file in gb_files:\n",
    "    directory,filename = os.path.split(gb_file)\n",
    "    filename = filename.strip('.gb')\n",
    "    feature_types = file_reader(gb_file)\n",
    "    feature_count = feature_counter(feature_types)\n",
    "    \n",
    "    temp_count = []\n",
    "    temp_count.append(filename)\n",
    "    \n",
    "    for feature in all_features: # you might not need this, though. You can go ahead to create your dataframe and fillna with 0\n",
    "        if feature in feature_count.keys():\n",
    "            temp_count.append(feature_count[feature])\n",
    "        else:\n",
    "            temp_count.append(0)\n",
    "    allfeature_count.append(temp_count)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "id": "70462cb9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5"
      ]
     },
     "execution_count": 144,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(allfeature_count)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "id": "8fc647fe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['regulatory',\n",
       " 'tmRNA',\n",
       " 'ncRNA',\n",
       " 'misc_binding',\n",
       " 'rRNA',\n",
       " 'tRNA',\n",
       " 'source',\n",
       " 'CDS',\n",
       " 'gene']"
      ]
     },
     "execution_count": 145,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "all_features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "id": "8d2af516",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['M48', 10, 1, 3, 0, 16, 60, 1, 3171, 3251]"
      ]
     },
     "execution_count": 146,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "allfeature_count[1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "id": "5d029493",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[['AR465', 0, 0, 0, 0, 19, 60, 1, 2740, 2819],\n",
       " ['M48', 10, 1, 3, 0, 16, 60, 1, 3171, 3251],\n",
       " ['P10', 10, 1, 3, 0, 8, 59, 1, 3179, 3250],\n",
       " ['R50', 10, 1, 3, 0, 10, 59, 1, 2935, 3008],\n",
       " ['V521 ', 0, 1, 3, 10, 16, 60, 1, 3114, 3194]]"
      ]
     },
     "execution_count": 147,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "allfeature_count"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "id": "389fe4cb",
   "metadata": {},
   "outputs": [],
   "source": [
    "columns = []\n",
    "columns.append('File')\n",
    "columns.extend(all_features)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "id": "b4b7950a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['File',\n",
       " 'regulatory',\n",
       " 'tmRNA',\n",
       " 'ncRNA',\n",
       " 'misc_binding',\n",
       " 'rRNA',\n",
       " 'tRNA',\n",
       " 'source',\n",
       " 'CDS',\n",
       " 'gene']"
      ]
     },
     "execution_count": 149,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "id": "97d3222b",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.DataFrame(allfeature_count, columns = columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 151,
   "id": "040c3e5f",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>File</th>\n",
       "      <th>regulatory</th>\n",
       "      <th>tmRNA</th>\n",
       "      <th>ncRNA</th>\n",
       "      <th>misc_binding</th>\n",
       "      <th>rRNA</th>\n",
       "      <th>tRNA</th>\n",
       "      <th>source</th>\n",
       "      <th>CDS</th>\n",
       "      <th>gene</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>AR465</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>19</td>\n",
       "      <td>60</td>\n",
       "      <td>1</td>\n",
       "      <td>2740</td>\n",
       "      <td>2819</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>M48</td>\n",
       "      <td>10</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>16</td>\n",
       "      <td>60</td>\n",
       "      <td>1</td>\n",
       "      <td>3171</td>\n",
       "      <td>3251</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>P10</td>\n",
       "      <td>10</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>59</td>\n",
       "      <td>1</td>\n",
       "      <td>3179</td>\n",
       "      <td>3250</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>R50</td>\n",
       "      <td>10</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>59</td>\n",
       "      <td>1</td>\n",
       "      <td>2935</td>\n",
       "      <td>3008</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>V521</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>16</td>\n",
       "      <td>60</td>\n",
       "      <td>1</td>\n",
       "      <td>3114</td>\n",
       "      <td>3194</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    File  regulatory  tmRNA  ncRNA  misc_binding  rRNA  tRNA  source   CDS  \\\n",
       "0  AR465           0      0      0             0    19    60       1  2740   \n",
       "1    M48          10      1      3             0    16    60       1  3171   \n",
       "2    P10          10      1      3             0     8    59       1  3179   \n",
       "3    R50          10      1      3             0    10    59       1  2935   \n",
       "4  V521            0      1      3            10    16    60       1  3114   \n",
       "\n",
       "   gene  \n",
       "0  2819  \n",
       "1  3251  \n",
       "2  3250  \n",
       "3  3008  \n",
       "4  3194  "
      ]
     },
     "execution_count": 151,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 152,
   "id": "52c79ac1",
   "metadata": {},
   "outputs": [],
   "source": [
    "cols_to_delete = ['regulatory', 'misc_binding', 'source']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 153,
   "id": "b4cfef54",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.drop(cols_to_delete, axis=1, inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 154,
   "id": "e2423b5f",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>File</th>\n",
       "      <th>tmRNA</th>\n",
       "      <th>ncRNA</th>\n",
       "      <th>rRNA</th>\n",
       "      <th>tRNA</th>\n",
       "      <th>CDS</th>\n",
       "      <th>gene</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>AR465</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>19</td>\n",
       "      <td>60</td>\n",
       "      <td>2740</td>\n",
       "      <td>2819</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>M48</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>16</td>\n",
       "      <td>60</td>\n",
       "      <td>3171</td>\n",
       "      <td>3251</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>P10</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>59</td>\n",
       "      <td>3179</td>\n",
       "      <td>3250</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>R50</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>59</td>\n",
       "      <td>2935</td>\n",
       "      <td>3008</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>V521</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>16</td>\n",
       "      <td>60</td>\n",
       "      <td>3114</td>\n",
       "      <td>3194</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    File  tmRNA  ncRNA  rRNA  tRNA   CDS  gene\n",
       "0  AR465      0      0    19    60  2740  2819\n",
       "1    M48      1      3    16    60  3171  3251\n",
       "2    P10      1      3     8    59  3179  3250\n",
       "3    R50      1      3    10    59  2935  3008\n",
       "4  V521       1      3    16    60  3114  3194"
      ]
     },
     "execution_count": 154,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 155,
   "id": "0116feeb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "File     AR465\n",
       "tmRNA        0\n",
       "ncRNA        0\n",
       "rRNA        19\n",
       "tRNA        60\n",
       "CDS       2740\n",
       "gene      2819\n",
       "Name: 0, dtype: object"
      ]
     },
     "execution_count": 155,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.loc[0, :]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 156,
   "id": "2cf40637",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df.set_index('File')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 157,
   "id": "479712b1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>tmRNA</th>\n",
       "      <th>ncRNA</th>\n",
       "      <th>rRNA</th>\n",
       "      <th>tRNA</th>\n",
       "      <th>CDS</th>\n",
       "      <th>gene</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>File</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AR465</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>19</td>\n",
       "      <td>60</td>\n",
       "      <td>2740</td>\n",
       "      <td>2819</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>M48</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>16</td>\n",
       "      <td>60</td>\n",
       "      <td>3171</td>\n",
       "      <td>3251</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>P10</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>59</td>\n",
       "      <td>3179</td>\n",
       "      <td>3250</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>R50</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>59</td>\n",
       "      <td>2935</td>\n",
       "      <td>3008</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>V521</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>16</td>\n",
       "      <td>60</td>\n",
       "      <td>3114</td>\n",
       "      <td>3194</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       tmRNA  ncRNA  rRNA  tRNA   CDS  gene\n",
       "File                                       \n",
       "AR465      0      0    19    60  2740  2819\n",
       "M48        1      3    16    60  3171  3251\n",
       "P10        1      3     8    59  3179  3250\n",
       "R50        1      3    10    59  2935  3008\n",
       "V521       1      3    16    60  3114  3194"
      ]
     },
     "execution_count": 157,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 158,
   "id": "c6ff7580",
   "metadata": {},
   "outputs": [],
   "source": [
    "save_folder = '/Users/CHUFESS/Documents/Bioinformatics/Code/gb_sequences/Features_summary.csv'\n",
    "df.to_csv(save_folder, index=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cf348151",
   "metadata": {},
   "source": [
    "### Loading Nucleotide Sequences From NCBI"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 159,
   "id": "d2db8fbe",
   "metadata": {},
   "outputs": [],
   "source": [
    "from Bio import SeqIO\n",
    "from Bio import Entrez"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 160,
   "id": "cfbd6aa3",
   "metadata": {},
   "outputs": [],
   "source": [
    "Entrez.email = 'ayosamoni@gmail.com'"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d4060add",
   "metadata": {},
   "source": [
    "### Download and view sequences"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 161,
   "id": "2bd2d0dc",
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "handle = Entrez.efetch(id='34577062', db='nuccore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 162,
   "id": "cef3dae6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Seq-entry ::= set {\n",
      "  level 1,\n",
      "  class nuc-prot,\n",
      "  descr {\n",
      "    source {\n",
      "      genome genomic,\n",
      "      org {\n",
      "        taxname \"Homo sapiens\",\n",
      "        common \"human\",\n",
      "        db {\n",
      "          {\n",
      "            db \"taxon\",\n",
      "            tag id 9606\n",
      "          }\n",
      "        },\n",
      "        orgname {\n",
      "          name binomial {\n",
      "            genus \"Homo\",\n",
      "            species \"sapiens\"\n",
      "          },\n",
      "          lineage \"Eukaryota; Metazoa; Chordata; Craniata; Vertebrata;\n",
      " Euteleostomi; Mammalia; Eutheria; Euarchontoglires; Primates; Haplorrhini;\n",
      " Catarrhini; Hominidae; Homo\",\n",
      "          gcode 1,\n",
      "          mgcode 2,\n",
      "          div \"PRI\"\n",
      "        }\n",
      "      },\n",
      "      subtype {\n",
      "        {\n",
      "          subtype chromosome,\n",
      "          name \"1\"\n",
      "        },\n",
      "        {\n",
      "          subtype map,\n",
      "          name \"1cen-q12\"\n",
      "        }\n",
      "      }\n",
      "    },\n",
      "    pub {\n",
      "      pub {\n",
      "        pmid 19115993,\n",
      "        article {\n",
      "          title {\n",
      "            name \"Association analyses of the interaction between the ADSS and\n",
      " ATM genes with schizophrenia in a Chinese population.\"\n",
      "          },\n",
      "          authors {\n",
      "            names std {\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Zhang\",\n",
      "                  initials \"F.\"\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Xu\",\n",
      "                  initials \"Y.\"\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Liu\",\n",
      "                  initials \"P.\"\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Fan\",\n",
      "                  initials \"H.\"\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Huang\",\n",
      "                  initials \"X.\"\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Sun\",\n",
      "                  initials \"G.\"\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Song\",\n",
      "                  initials \"Y.\"\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Sham\",\n",
      "                  initials \"P.C.\"\n",
      "                }\n",
      "              }\n",
      "            },\n",
      "            affil str \"Institute of Neurological disorders, Tsinghua\n",
      " University, Department of Psychiatry, Yuquan Hospital, Tsinghua University,\n",
      " Bejing, 100049, PR China. zhfq@tsinghua.edu.cn\"\n",
      "          },\n",
      "          from journal {\n",
      "            title {\n",
      "              iso-jta \"BMC Med. Genet.\",\n",
      "              ml-jta \"BMC Med Genet\",\n",
      "              issn \"1471-2350\",\n",
      "              name \"BMC medical genetics\"\n",
      "            },\n",
      "            imp {\n",
      "              date std {\n",
      "                year 2008\n",
      "              },\n",
      "              volume \"9\",\n",
      "              pages \"119\",\n",
      "              language \"eng\",\n",
      "              pubstatus epublish,\n",
      "              history {\n",
      "                {\n",
      "                  pubstatus received,\n",
      "                  date std {\n",
      "                    year 2008,\n",
      "                    month 7,\n",
      "                    day 27\n",
      "                  }\n",
      "                },\n",
      "                {\n",
      "                  pubstatus accepted,\n",
      "                  date std {\n",
      "                    year 2008,\n",
      "                    month 12,\n",
      "                    day 30\n",
      "                  }\n",
      "                },\n",
      "                {\n",
      "                  pubstatus aheadofprint,\n",
      "                  date std {\n",
      "                    year 2008,\n",
      "                    month 12,\n",
      "                    day 30\n",
      "                  }\n",
      "                },\n",
      "                {\n",
      "                  pubstatus other,\n",
      "                  date std {\n",
      "                    year 2009,\n",
      "                    month 1,\n",
      "                    day 1,\n",
      "                    hour 9,\n",
      "                    minute 0\n",
      "                  }\n",
      "                },\n",
      "                {\n",
      "                  pubstatus pubmed,\n",
      "                  date std {\n",
      "                    year 2009,\n",
      "                    month 1,\n",
      "                    day 1,\n",
      "                    hour 9,\n",
      "                    minute 0\n",
      "                  }\n",
      "                },\n",
      "                {\n",
      "                  pubstatus medline,\n",
      "                  date std {\n",
      "                    year 2009,\n",
      "                    month 3,\n",
      "                    day 19,\n",
      "                    hour 9,\n",
      "                    minute 0\n",
      "                  }\n",
      "                }\n",
      "              }\n",
      "            }\n",
      "          },\n",
      "          ids {\n",
      "            pii \"1471-2350-9-119\",\n",
      "            doi \"10.1186/1471-2350-9-119\",\n",
      "            pubmed 19115993,\n",
      "            other {\n",
      "              db \"pmc\",\n",
      "              tag str \"PMC2654671\"\n",
      "            }\n",
      "          }\n",
      "        }\n",
      "      },\n",
      "      comment \"GeneRIF: These findings suggest that the combined effects of\n",
      " the polymorphisms in the ADSS and ATM genes may confer susceptibility to the\n",
      " development of schizophrenia in a Chinese population~GeneRIF: Observational\n",
      " study of gene-disease association and gene-gene interaction. (HuGE Navigator)\"\n",
      "    },\n",
      "    pub {\n",
      "      pub {\n",
      "        pmid 18721483,\n",
      "        article {\n",
      "          title {\n",
      "            name \"An association study of ADSS gene polymorphisms with\n",
      " schizophrenia.\"\n",
      "          },\n",
      "          authors {\n",
      "            names std {\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Zhang\",\n",
      "                  initials \"F.\"\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Sham\",\n",
      "                  initials \"P.C.\"\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Fan\",\n",
      "                  initials \"H.\"\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Xu\",\n",
      "                  initials \"Y.\"\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Huang\",\n",
      "                  initials \"X.\"\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                name name {\n",
      "                  last \"So\",\n",
      "                  initials \"H.\"\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Song\",\n",
      "                  initials \"Y.\"\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Liu\",\n",
      "                  initials \"P.\"\n",
      "                }\n",
      "              }\n",
      "            },\n",
      "            affil str \"Institute of Neurological disorders, Tsinghua\n",
      " University; Department of Psychiatry, Yuquan Hospital, Tsinghua University,\n",
      " Bejing, 100049, PR China. liupozi@tsinghua.edu.cn.\"\n",
      "          },\n",
      "          from journal {\n",
      "            title {\n",
      "              iso-jta \"Behav Brain Funct\",\n",
      "              ml-jta \"Behav Brain Funct\",\n",
      "              issn \"1744-9081\",\n",
      "              name \"Behavioral and brain functions : BBF\"\n",
      "            },\n",
      "            imp {\n",
      "              date std {\n",
      "                year 2008\n",
      "              },\n",
      "              volume \"4\",\n",
      "              pages \"39\",\n",
      "              language \"eng\",\n",
      "              pubstatus epublish,\n",
      "              history {\n",
      "                {\n",
      "                  pubstatus received,\n",
      "                  date std {\n",
      "                    year 2008,\n",
      "                    month 4,\n",
      "                    day 20\n",
      "                  }\n",
      "                },\n",
      "                {\n",
      "                  pubstatus accepted,\n",
      "                  date std {\n",
      "                    year 2008,\n",
      "                    month 8,\n",
      "                    day 24\n",
      "                  }\n",
      "                },\n",
      "                {\n",
      "                  pubstatus aheadofprint,\n",
      "                  date std {\n",
      "                    year 2008,\n",
      "                    month 8,\n",
      "                    day 24\n",
      "                  }\n",
      "                },\n",
      "                {\n",
      "                  pubstatus pubmed,\n",
      "                  date std {\n",
      "                    year 2008,\n",
      "                    month 8,\n",
      "                    day 30,\n",
      "                    hour 9,\n",
      "                    minute 0\n",
      "                  }\n",
      "                },\n",
      "                {\n",
      "                  pubstatus medline,\n",
      "                  date std {\n",
      "                    year 2008,\n",
      "                    month 8,\n",
      "                    day 30,\n",
      "                    hour 9,\n",
      "                    minute 0\n",
      "                  }\n",
      "                },\n",
      "                {\n",
      "                  pubstatus other,\n",
      "                  date std {\n",
      "                    year 2008,\n",
      "                    month 8,\n",
      "                    day 30,\n",
      "                    hour 9,\n",
      "                    minute 0\n",
      "                  }\n",
      "                }\n",
      "              }\n",
      "            }\n",
      "          },\n",
      "          ids {\n",
      "            pii \"1744-9081-4-39\",\n",
      "            doi \"10.1186/1744-9081-4-39\",\n",
      "            pubmed 18721483,\n",
      "            other {\n",
      "              db \"pmc\",\n",
      "              tag str \"PMC2553416\"\n",
      "            }\n",
      "          }\n",
      "        }\n",
      "      },\n",
      "      comment \"GeneRIF: Observational study of gene-disease association. (HuGE\n",
      " Navigator)\"\n",
      "    },\n",
      "    pub {\n",
      "      pub {\n",
      "        pmid 18469177,\n",
      "        article {\n",
      "          title {\n",
      "            name \"Effect of a new non-cleavable substrate analog on wild-type\n",
      " and serine mutants in the signature sequence of adenylosuccinate lyase of\n",
      " Bacillus subtilis and Homo sapiens.\"\n",
      "          },\n",
      "          authors {\n",
      "            names std {\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Sivendran\",\n",
      "                  initials \"S.\"\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Colman\",\n",
      "                  initials \"R.F.\"\n",
      "                }\n",
      "              }\n",
      "            },\n",
      "            affil str \"Department of Chemistry and Biochemistry, University of\n",
      " Delaware, Newark, Delaware 19716, USA.\"\n",
      "          },\n",
      "          from journal {\n",
      "            title {\n",
      "              iso-jta \"Protein Sci.\",\n",
      "              ml-jta \"Protein Sci\",\n",
      "              issn \"1469-896X\",\n",
      "              name \"Protein science : a publication of the Protein Society\"\n",
      "            },\n",
      "            imp {\n",
      "              date std {\n",
      "                year 2008,\n",
      "                month 7\n",
      "              },\n",
      "              volume \"17\",\n",
      "              issue \"7\",\n",
      "              pages \"1162-1174\",\n",
      "              language \"eng\",\n",
      "              pubstatus ppublish,\n",
      "              history {\n",
      "                {\n",
      "                  pubstatus aheadofprint,\n",
      "                  date std {\n",
      "                    year 2008,\n",
      "                    month 5,\n",
      "                    day 9\n",
      "                  }\n",
      "                },\n",
      "                {\n",
      "                  pubstatus pubmed,\n",
      "                  date std {\n",
      "                    year 2008,\n",
      "                    month 5,\n",
      "                    day 13,\n",
      "                    hour 9,\n",
      "                    minute 0\n",
      "                  }\n",
      "                },\n",
      "                {\n",
      "                  pubstatus medline,\n",
      "                  date std {\n",
      "                    year 2008,\n",
      "                    month 8,\n",
      "                    day 30,\n",
      "                    hour 9,\n",
      "                    minute 0\n",
      "                  }\n",
      "                },\n",
      "                {\n",
      "                  pubstatus other,\n",
      "                  date std {\n",
      "                    year 2008,\n",
      "                    month 5,\n",
      "                    day 13,\n",
      "                    hour 9,\n",
      "                    minute 0\n",
      "                  }\n",
      "                }\n",
      "              }\n",
      "            }\n",
      "          },\n",
      "          ids {\n",
      "            pii \"ps.034777.108\",\n",
      "            doi \"10.1110/ps.034777.108\",\n",
      "            pubmed 18469177,\n",
      "            other {\n",
      "              db \"pmc\",\n",
      "              tag str \"PMC2442012\"\n",
      "            }\n",
      "          }\n",
      "        }\n",
      "      },\n",
      "      comment \"GeneRIF: Kinetic data reveal that human Ser(289) and B.\n",
      " subtilis Ser(262) and Ser(263) are essential for catalysis, while the ability\n",
      " of these Ser mutants to bind APBADP suggests that they do not contribute to\n",
      " substrate affinity\"\n",
      "    },\n",
      "    pub {\n",
      "      pub {\n",
      "        pmid 15786719,\n",
      "        article {\n",
      "          title {\n",
      "            name \"Molecular cloning and characterization of a novel muscle\n",
      " adenylosuccinate synthetase, AdSSL1, from human bone marrow stromal cells.\"\n",
      "          },\n",
      "          authors {\n",
      "            names std {\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Sun\",\n",
      "                  initials \"H.\"\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Li\",\n",
      "                  initials \"N.\"\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Wang\",\n",
      "                  initials \"X.\"\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Chen\",\n",
      "                  initials \"T.\"\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Shi\",\n",
      "                  initials \"L.\"\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Zhang\",\n",
      "                  initials \"L.\"\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Wang\",\n",
      "                  initials \"J.\"\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Wan\",\n",
      "                  initials \"T.\"\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Cao\",\n",
      "                  initials \"X.\"\n",
      "                }\n",
      "              }\n",
      "            },\n",
      "            affil str \"Institute of Immunology, Zhejiang University, Hangzhou,\n",
      " Zhejiang, PR China.\"\n",
      "          },\n",
      "          from journal {\n",
      "            title {\n",
      "              iso-jta \"Mol. Cell. Biochem.\",\n",
      "              ml-jta \"Mol Cell Biochem\",\n",
      "              issn \"0300-8177\",\n",
      "              name \"Molecular and cellular biochemistry\"\n",
      "            },\n",
      "            imp {\n",
      "              date std {\n",
      "                year 2005,\n",
      "                month 1\n",
      "              },\n",
      "              volume \"269\",\n",
      "              issue \"1-2\",\n",
      "              pages \"85-94\",\n",
      "              language \"eng\",\n",
      "              pubstatus ppublish,\n",
      "              history {\n",
      "                {\n",
      "                  pubstatus pubmed,\n",
      "                  date std {\n",
      "                    year 2005,\n",
      "                    month 3,\n",
      "                    day 25,\n",
      "                    hour 9,\n",
      "                    minute 0\n",
      "                  }\n",
      "                },\n",
      "                {\n",
      "                  pubstatus medline,\n",
      "                  date std {\n",
      "                    year 2005,\n",
      "                    month 9,\n",
      "                    day 2,\n",
      "                    hour 9,\n",
      "                    minute 0\n",
      "                  }\n",
      "                },\n",
      "                {\n",
      "                  pubstatus other,\n",
      "                  date std {\n",
      "                    year 2005,\n",
      "                    month 3,\n",
      "                    day 25,\n",
      "                    hour 9,\n",
      "                    minute 0\n",
      "                  }\n",
      "                }\n",
      "              }\n",
      "            }\n",
      "          },\n",
      "          ids {\n",
      "            pubmed 15786719\n",
      "          }\n",
      "        }\n",
      "      }\n",
      "    },\n",
      "    pub {\n",
      "      pub {\n",
      "        pmid 8887278,\n",
      "        article {\n",
      "          title {\n",
      "            name \"Purine nucleotide cycle in rat renal cortex and medulla\n",
      " under conditions that mimic normal and low oxygen supply.\"\n",
      "          },\n",
      "          authors {\n",
      "            names std {\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Stepinski\",\n",
      "                  initials \"J.\"\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Pawelczyk\",\n",
      "                  initials \"T.\"\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Bizon\",\n",
      "                  initials \"D.\"\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Angielski\",\n",
      "                  initials \"S.\"\n",
      "                }\n",
      "              }\n",
      "            },\n",
      "            affil str \"Department of Clinical Biochemistry, Medical University\n",
      " of Gdansk, Poland.\"\n",
      "          },\n",
      "          from journal {\n",
      "            title {\n",
      "              iso-jta \"Kidney Int.\",\n",
      "              ml-jta \"Kidney Int\",\n",
      "              issn \"0085-2538\",\n",
      "              name \"Kidney international\"\n",
      "            },\n",
      "            imp {\n",
      "              date std {\n",
      "                year 1996,\n",
      "                month 10\n",
      "              },\n",
      "              volume \"50\",\n",
      "              issue \"4\",\n",
      "              pages \"1195-1201\",\n",
      "              language \"eng\",\n",
      "              pubstatus ppublish,\n",
      "              history {\n",
      "                {\n",
      "                  pubstatus pubmed,\n",
      "                  date std {\n",
      "                    year 1996,\n",
      "                    month 10,\n",
      "                    day 1\n",
      "                  }\n",
      "                },\n",
      "                {\n",
      "                  pubstatus medline,\n",
      "                  date std {\n",
      "                    year 1996,\n",
      "                    month 10,\n",
      "                    day 1,\n",
      "                    hour 0,\n",
      "                    minute 1\n",
      "                  }\n",
      "                },\n",
      "                {\n",
      "                  pubstatus other,\n",
      "                  date std {\n",
      "                    year 1996,\n",
      "                    month 10,\n",
      "                    day 1,\n",
      "                    hour 0,\n",
      "                    minute 0\n",
      "                  }\n",
      "                }\n",
      "              }\n",
      "            }\n",
      "          },\n",
      "          ids {\n",
      "            pubmed 8887278\n",
      "          }\n",
      "        }\n",
      "      }\n",
      "    },\n",
      "    pub {\n",
      "      pub {\n",
      "        pmid 4436310,\n",
      "        article {\n",
      "          title {\n",
      "            name \"Human adenylosuccinate synthetase. Partial purification,\n",
      " kinetic and regulatory properties of the enzyme from placenta.\"\n",
      "          },\n",
      "          authors {\n",
      "            names std {\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Van der Weyden\",\n",
      "                  initials \"M.B.\"\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Kelly\",\n",
      "                  initials \"W.N.\"\n",
      "                }\n",
      "              }\n",
      "            }\n",
      "          },\n",
      "          from journal {\n",
      "            title {\n",
      "              iso-jta \"J. Biol. Chem.\",\n",
      "              ml-jta \"J Biol Chem\",\n",
      "              issn \"0021-9258\",\n",
      "              name \"The Journal of biological chemistry\"\n",
      "            },\n",
      "            imp {\n",
      "              date std {\n",
      "                year 1974,\n",
      "                month 11,\n",
      "                day 25\n",
      "              },\n",
      "              volume \"249\",\n",
      "              issue \"22\",\n",
      "              pages \"7282-7289\",\n",
      "              language \"eng\",\n",
      "              pubstatus ppublish,\n",
      "              history {\n",
      "                {\n",
      "                  pubstatus pubmed,\n",
      "                  date std {\n",
      "                    year 1974,\n",
      "                    month 11,\n",
      "                    day 25\n",
      "                  }\n",
      "                },\n",
      "                {\n",
      "                  pubstatus medline,\n",
      "                  date std {\n",
      "                    year 1974,\n",
      "                    month 11,\n",
      "                    day 25,\n",
      "                    hour 0,\n",
      "                    minute 1\n",
      "                  }\n",
      "                },\n",
      "                {\n",
      "                  pubstatus other,\n",
      "                  date std {\n",
      "                    year 1974,\n",
      "                    month 11,\n",
      "                    day 25,\n",
      "                    hour 0,\n",
      "                    minute 0\n",
      "                  }\n",
      "                }\n",
      "              }\n",
      "            }\n",
      "          },\n",
      "          ids {\n",
      "            pubmed 4436310\n",
      "          }\n",
      "        }\n",
      "      }\n",
      "    },\n",
      "    pub {\n",
      "      pub {\n",
      "        pmid 2004783,\n",
      "        article {\n",
      "          title {\n",
      "            name \"A gene correcting the defect in the CHO mutant Ade -H,\n",
      " deficient in a branch point enzyme (adenylosuccinate synthetase) of de novo\n",
      " purine biosynthesis, is located on the long arm of chromosome 1.\"\n",
      "          },\n",
      "          authors {\n",
      "            names std {\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Lai\",\n",
      "                  initials \"L.W.\"\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Hart\",\n",
      "                  initials \"I.M.\"\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Patterson\",\n",
      "                  initials \"D.\"\n",
      "                }\n",
      "              }\n",
      "            },\n",
      "            affil str \"Eleanor Roosevelt Institute for Cancer Research,\n",
      " Denver, Colorado 80206.\"\n",
      "          },\n",
      "          from journal {\n",
      "            title {\n",
      "              iso-jta \"Genomics\",\n",
      "              ml-jta \"Genomics\",\n",
      "              issn \"0888-7543\",\n",
      "              name \"Genomics\"\n",
      "            },\n",
      "            imp {\n",
      "              date std {\n",
      "                year 1991,\n",
      "                month 2\n",
      "              },\n",
      "              volume \"9\",\n",
      "              issue \"2\",\n",
      "              pages \"322-328\",\n",
      "              language \"eng\",\n",
      "              pubstatus ppublish,\n",
      "              history {\n",
      "                {\n",
      "                  pubstatus pubmed,\n",
      "                  date std {\n",
      "                    year 1991,\n",
      "                    month 2,\n",
      "                    day 1\n",
      "                  }\n",
      "                },\n",
      "                {\n",
      "                  pubstatus medline,\n",
      "                  date std {\n",
      "                    year 1991,\n",
      "                    month 2,\n",
      "                    day 1,\n",
      "                    hour 0,\n",
      "                    minute 1\n",
      "                  }\n",
      "                },\n",
      "                {\n",
      "                  pubstatus other,\n",
      "                  date std {\n",
      "                    year 1991,\n",
      "                    month 2,\n",
      "                    day 1,\n",
      "                    hour 0,\n",
      "                    minute 0\n",
      "                  }\n",
      "                }\n",
      "              }\n",
      "            }\n",
      "          },\n",
      "          ids {\n",
      "            pubmed 2004783,\n",
      "            pii \"0888-7543(91)90260-L\"\n",
      "          }\n",
      "        }\n",
      "      }\n",
      "    },\n",
      "    pub {\n",
      "      pub {\n",
      "        pmid 1592113,\n",
      "        article {\n",
      "          title {\n",
      "            name \"Cloning and characterization of the cDNA encoding human\n",
      " adenylosuccinate synthetase.\"\n",
      "          },\n",
      "          authors {\n",
      "            names std {\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Powell\",\n",
      "                  initials \"S.M.\"\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Zalkin\",\n",
      "                  initials \"H.\"\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Dixon\",\n",
      "                  initials \"J.E.\"\n",
      "                }\n",
      "              }\n",
      "            },\n",
      "            affil str \"Department of Biochemistry, Purdue University, West\n",
      " Lafayette, IN 49707.\"\n",
      "          },\n",
      "          from journal {\n",
      "            title {\n",
      "              iso-jta \"FEBS Lett.\",\n",
      "              ml-jta \"FEBS Lett\",\n",
      "              issn \"0014-5793\",\n",
      "              name \"FEBS letters\"\n",
      "            },\n",
      "            imp {\n",
      "              date std {\n",
      "                year 1992,\n",
      "                month 5,\n",
      "                day 25\n",
      "              },\n",
      "              volume \"303\",\n",
      "              issue \"1\",\n",
      "              pages \"4-10\",\n",
      "              language \"eng\",\n",
      "              pubstatus ppublish,\n",
      "              history {\n",
      "                {\n",
      "                  pubstatus pubmed,\n",
      "                  date std {\n",
      "                    year 1992,\n",
      "                    month 5,\n",
      "                    day 25\n",
      "                  }\n",
      "                },\n",
      "                {\n",
      "                  pubstatus medline,\n",
      "                  date std {\n",
      "                    year 1992,\n",
      "                    month 5,\n",
      "                    day 25,\n",
      "                    hour 0,\n",
      "                    minute 1\n",
      "                  }\n",
      "                },\n",
      "                {\n",
      "                  pubstatus other,\n",
      "                  date std {\n",
      "                    year 1992,\n",
      "                    month 5,\n",
      "                    day 25,\n",
      "                    hour 0,\n",
      "                    minute 0\n",
      "                  }\n",
      "                }\n",
      "              }\n",
      "            }\n",
      "          },\n",
      "          ids {\n",
      "            pubmed 1592113,\n",
      "            pii \"0014-5793(92)80465-S\"\n",
      "          }\n",
      "        }\n",
      "      }\n",
      "    },\n",
      "    pub {\n",
      "      pub {\n",
      "        pmid 1574589,\n",
      "        article {\n",
      "          title {\n",
      "            name \"De novo purine nucleotide biosynthesis.\"\n",
      "          },\n",
      "          authors {\n",
      "            names std {\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Zalkin\",\n",
      "                  initials \"H.\"\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Dixon\",\n",
      "                  initials \"J.E.\"\n",
      "                }\n",
      "              }\n",
      "            },\n",
      "            affil str \"Department of Biochemistry, Purdue University, West\n",
      " Lafayette, Indiana 47907.\"\n",
      "          },\n",
      "          from journal {\n",
      "            title {\n",
      "              iso-jta \"Prog. Nucleic Acid Res. Mol. Biol.\",\n",
      "              ml-jta \"Prog Nucleic Acid Res Mol Biol\",\n",
      "              issn \"0079-6603\",\n",
      "              name \"Progress in nucleic acid research and molecular biology\"\n",
      "            },\n",
      "            imp {\n",
      "              date std {\n",
      "                year 1992\n",
      "              },\n",
      "              volume \"42\",\n",
      "              pages \"259-287\",\n",
      "              language \"eng\",\n",
      "              pubstatus ppublish,\n",
      "              history {\n",
      "                {\n",
      "                  pubstatus pubmed,\n",
      "                  date std {\n",
      "                    year 1992,\n",
      "                    month 1,\n",
      "                    day 1\n",
      "                  }\n",
      "                },\n",
      "                {\n",
      "                  pubstatus medline,\n",
      "                  date std {\n",
      "                    year 1992,\n",
      "                    month 1,\n",
      "                    day 1,\n",
      "                    hour 0,\n",
      "                    minute 1\n",
      "                  }\n",
      "                },\n",
      "                {\n",
      "                  pubstatus other,\n",
      "                  date std {\n",
      "                    year 1992,\n",
      "                    month 1,\n",
      "                    day 1,\n",
      "                    hour 0,\n",
      "                    minute 0\n",
      "                  }\n",
      "                }\n",
      "              }\n",
      "            }\n",
      "          },\n",
      "          ids {\n",
      "            pubmed 1574589\n",
      "          }\n",
      "        }\n",
      "      },\n",
      "      comment \"Review article\"\n",
      "    },\n",
      "    pub {\n",
      "      pub {\n",
      "        pmid 648524,\n",
      "        article {\n",
      "          title {\n",
      "            name \"Interaction of adenylosuccinate synthetase with F-actin.\"\n",
      "          },\n",
      "          authors {\n",
      "            names std {\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Ogawa\",\n",
      "                  initials \"H.\"\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Shiraki\",\n",
      "                  initials \"H.\"\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Matsuda\",\n",
      "                  initials \"Y.\"\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                name name {\n",
      "                  last \"Nakagawa\",\n",
      "                  initials \"H.\"\n",
      "                }\n",
      "              }\n",
      "            }\n",
      "          },\n",
      "          from journal {\n",
      "            title {\n",
      "              iso-jta \"Eur. J. Biochem.\",\n",
      "              ml-jta \"Eur J Biochem\",\n",
      "              issn \"0014-2956\",\n",
      "              name \"European journal of biochemistry / FEBS\"\n",
      "            },\n",
      "            imp {\n",
      "              date std {\n",
      "                year 1978,\n",
      "                month 4,\n",
      "                day 17\n",
      "              },\n",
      "              volume \"85\",\n",
      "              issue \"2\",\n",
      "              pages \"331-337\",\n",
      "              language \"eng\",\n",
      "              pubstatus ppublish,\n",
      "              history {\n",
      "                {\n",
      "                  pubstatus pubmed,\n",
      "                  date std {\n",
      "                    year 1978,\n",
      "                    month 4,\n",
      "                    day 17\n",
      "                  }\n",
      "                },\n",
      "                {\n",
      "                  pubstatus medline,\n",
      "                  date std {\n",
      "                    year 1978,\n",
      "                    month 4,\n",
      "                    day 17,\n",
      "                    hour 0,\n",
      "                    minute 1\n",
      "                  }\n",
      "                },\n",
      "                {\n",
      "                  pubstatus other,\n",
      "                  date std {\n",
      "                    year 1978,\n",
      "                    month 4,\n",
      "                    day 17,\n",
      "                    hour 0,\n",
      "                    minute 0\n",
      "                  }\n",
      "                }\n",
      "              }\n",
      "            }\n",
      "          },\n",
      "          ids {\n",
      "            pubmed 648524\n",
      "          }\n",
      "        }\n",
      "      }\n",
      "    },\n",
      "    comment \"~Summary: Adenylosuccinate synthetase catalyzes the first\n",
      " committed step in the conversion of IMP to AMP [provided by RefSeq]\",\n",
      "    user {\n",
      "      type str \"RefGeneTracking\",\n",
      "      data {\n",
      "        {\n",
      "          label str \"Status\",\n",
      "          data str \"Reviewed\"\n",
      "        },\n",
      "        {\n",
      "          label str \"Assembly\",\n",
      "          data fields {\n",
      "            {\n",
      "              label id 0,\n",
      "              data fields {\n",
      "                {\n",
      "                  label str \"accession\",\n",
      "                  data str \"BC012356.1\"\n",
      "                },\n",
      "                {\n",
      "                  label str \"gi\",\n",
      "                  data int 15214463\n",
      "                }\n",
      "              }\n",
      "            },\n",
      "            {\n",
      "              label id 0,\n",
      "              data fields {\n",
      "                {\n",
      "                  label str \"accession\",\n",
      "                  data str \"BG700800.1\"\n",
      "                }\n",
      "              }\n",
      "            }\n",
      "          }\n",
      "        }\n",
      "      }\n",
      "    },\n",
      "    update-date std {\n",
      "      year 2010,\n",
      "      month 10,\n",
      "      day 10\n",
      "    }\n",
      "  },\n",
      "  seq-set {\n",
      "    seq {\n",
      "      id {\n",
      "        other {\n",
      "          accession \"NM_001126\",\n",
      "          version 2\n",
      "        },\n",
      "        gi 34577062\n",
      "      },\n",
      "      descr {\n",
      "        title \"Homo sapiens adenylosuccinate synthase (ADSS), mRNA\",\n",
      "        molinfo {\n",
      "          biomol mRNA,\n",
      "          completeness has-right\n",
      "        },\n",
      "        create-date std {\n",
      "          year 1999,\n",
      "          month 4,\n",
      "          day 1\n",
      "        }\n",
      "      },\n",
      "      inst {\n",
      "        repr raw,\n",
      "        mol rna,\n",
      "        length 2775,\n",
      "        seq-data ncbi2na 'A0AA6E976B5AAE9A5BE59452A5DF5E6A6B9E58A5A5E66A92D3AC\n",
      "557E26A7BA6889AA6A87A7A2AE9A569AA6AA6A96977A75F7D7793BA7A6964892F4BD9D1D765A59\n",
      "775F6A775D9B47A253A6F65885C569A4D757950698F9A5954A99A568A016AE1AEB9DAE64BAA618\n",
      "2902A0AEBA179E99286584DBB96794A8A030E7A5312FBEE8F7BA0CE3FD377C54BA0C3C3503B479\n",
      "3D3E80EBBAC3D3717A3EFE08248800EF400A00A1C829EA000A7CF3378489D33ECFE3FD34249E3A\n",
      "CD4A0412210810928003FAB104002A4FA54BF3DB50279DA2E874A3B985FBF787F8E9F7788AFC0B\n",
      "DC9C1431037331547FA03213E0AE0F1001D0ABCCE8023C050EB888E8BF3FDCCE295C4E85140803\n",
      "7EB20AE40E491CF233E3FEA1F15FFB05DF40FB1EFA2BBFB1EBFAB3945D00EFA20BB3A2FB809F31\n",
      "0722FACFAE5FD71224210E03E883CF1010AAC88BFAEC1C7A0A00823BA7AFA176FF9D0339D338D0\n",
      "E8FC79BE91F142FA33FE84EFC680D02FA2F9F10BC8EB80D3174CD52405082DF0302F82F4330877\n",
      "54A3A04484CD0390A9BF020717BC3910073BD8FCF82389F40F52F0BA3EBBEB035220DCE3D077FC\n",
      "38F94B0E42011D7E22A2A8021FDF033F4FCE17903D0830211E0B0BF825712FBF52DFF48E8E5C7B\n",
      "A23C1FE933D4BB49FDFC9E83E5034FEF9D79E774EB946FFFFF43BF2C32CC353BEFE33402C83C7F\n",
      "C3B2FFDF4F3ED3E6EF7C2FF1573C8EB0810F0E4BFE440CFFC4F78D3D2F7B4FB0DFEFBC8040E380\n",
      "132ABDEC07FEC39CE0F7BF03FEA7B73FDE78053900F89FEBAA7A8AABCECF4EA17F0FEC4811207C\n",
      "FDED2F3F0C4F803F2E03BD0220C8EFD500410DFCEF0032D3C0237BEC333AE8CFFDFC3F404F1778\n",
      "0EECDFF7FFCDF14F0FF0372E8FAFF4136E5E58CE5C4834DEC2ED00E0546FBC94C3FE3CE5FCFDD7\n",
      "F7E00000AEF3FE10F29304FBFEC8F37FC381CFF03BC0F2B947C0FCFF3C45383278F008140CFDCB\n",
      "0000000000'H,\n",
      "        hist {\n",
      "          replaces {\n",
      "            date std {\n",
      "              year 2003,\n",
      "              month 9,\n",
      "              day 11\n",
      "            },\n",
      "            ids {\n",
      "              gi 4557270\n",
      "            }\n",
      "          },\n",
      "          replaced-by {\n",
      "            date std {\n",
      "              year 2010,\n",
      "              month 11,\n",
      "              day 25\n",
      "            },\n",
      "            ids {\n",
      "              gi 312836839\n",
      "            }\n",
      "          }\n",
      "        }\n",
      "      },\n",
      "      annot {\n",
      "        {\n",
      "          data ftable {\n",
      "            {\n",
      "              data imp {\n",
      "                key \"polyA_signal\"\n",
      "              },\n",
      "              location int {\n",
      "                from 2731,\n",
      "                to 2736,\n",
      "                strand plus,\n",
      "                id gi 34577062\n",
      "              }\n",
      "            },\n",
      "            {\n",
      "              data imp {\n",
      "                key \"polyA_site\"\n",
      "              },\n",
      "              location pnt {\n",
      "                point 2756,\n",
      "                strand plus,\n",
      "                id gi 34577062\n",
      "              }\n",
      "            },\n",
      "            {\n",
      "              data gene {\n",
      "                locus \"ADSS\",\n",
      "                desc \"adenylosuccinate synthase\",\n",
      "                syn {\n",
      "                  \"ADEH\",\n",
      "                  \"MGC20404\"\n",
      "                }\n",
      "              },\n",
      "              location int {\n",
      "                from 0,\n",
      "                to 2774,\n",
      "                strand plus,\n",
      "                id gi 34577062\n",
      "              },\n",
      "              dbxref {\n",
      "                {\n",
      "                  db \"GeneID\",\n",
      "                  tag id 159\n",
      "                },\n",
      "                {\n",
      "                  db \"HGNC\",\n",
      "                  tag id 292\n",
      "                },\n",
      "                {\n",
      "                  db \"HPRD\",\n",
      "                  tag str \"00050\"\n",
      "                },\n",
      "                {\n",
      "                  db \"MIM\",\n",
      "                  tag id 103060\n",
      "                }\n",
      "              }\n",
      "            }\n",
      "          }\n",
      "        }\n",
      "      }\n",
      "    },\n",
      "    seq {\n",
      "      id {\n",
      "        other {\n",
      "          accession \"NP_001117\",\n",
      "          version 2\n",
      "        },\n",
      "        gi 34577063\n",
      "      },\n",
      "      descr {\n",
      "        title \"adenylosuccinate synthetase isozyme 2 [Homo sapiens]\",\n",
      "        molinfo {\n",
      "          biomol peptide\n",
      "        },\n",
      "        create-date std {\n",
      "          year 1999,\n",
      "          month 4,\n",
      "          day 1\n",
      "        }\n",
      "      },\n",
      "      inst {\n",
      "        repr raw,\n",
      "        mol aa,\n",
      "        length 456,\n",
      "        seq-data ncbieaa \"MAFAETYPAASSLPNGDCGRPRARPGGNRVTVVLGAQWGDEGKGKVVDLLAQ\n",
      "DADIVCRCQGGNNAGHTVVVDSVEYDFHLLPSGIINPNVTAFIGNGVVIHLPGLFEEAEKNVQKGKGLEGWEKRLIIS\n",
      "DRAHIVFDFHQAADGIQEQQRQEQAGKNLGTTKKGIGPVYSSKAARSGLRMCDLVSDFDGFSERFKVLANQYKSIYPT\n",
      "LEIDIEGELQKLKGYMEKIKPMVRDGVYFLYEALHGPPKKILVEGANAALLDIDFGTYPFVTSSNCTVGGVCTGLGMP\n",
      "PQNVGEVYGVVKAYTTRVGIGAFPTEQDNEIGELLQTRGREFGVTTGRKRRCGWLDLVLLKYAHMINGFTALALTKLD\n",
      "ILDMFTEIKVGVAYKLDGEIIPHIPANQEVLNKVEVQYKTLPGWNTDISNARAFKELPVNAQNYVRFIEDELQIPVKW\n",
      "IGVGKSRESMIQLF\",\n",
      "        hist {\n",
      "          replaces {\n",
      "            date std {\n",
      "              year 2003,\n",
      "              month 9,\n",
      "              day 11\n",
      "            },\n",
      "            ids {\n",
      "              gi 4557271\n",
      "            }\n",
      "          }\n",
      "        }\n",
      "      },\n",
      "      annot {\n",
      "        {\n",
      "          data ftable {\n",
      "            {\n",
      "              data prot {\n",
      "                name {\n",
      "                  \"adenylosuccinate synthetase isozyme 2\",\n",
      "                  \"adenylosuccinate synthetase (Ade(-)H-complementing)\",\n",
      "                  \"adenylosuccinate synthetase, acidic isozyme\",\n",
      "                  \"IMP--aspartate ligase 2\",\n",
      "                  \"adSS 2\",\n",
      "                  \"AMPSase 2\",\n",
      "                  \"L-type adenylosuccinate synthetase\",\n",
      "                  \"adenylosuccinate synthetase, liver isozyme\"\n",
      "                },\n",
      "                ec {\n",
      "                  \"6.3.4.4\"\n",
      "                }\n",
      "              },\n",
      "              location int {\n",
      "                from 0,\n",
      "                to 455,\n",
      "                id gi 34577063\n",
      "              }\n",
      "            }\n",
      "          }\n",
      "        }\n",
      "      }\n",
      "    }\n",
      "  },\n",
      "  annot {\n",
      "    {\n",
      "      data ftable {\n",
      "        {\n",
      "          data cdregion {\n",
      "            frame one,\n",
      "            code {\n",
      "              id 1\n",
      "            }\n",
      "          },\n",
      "          product whole gi 34577063,\n",
      "          location int {\n",
      "            from 294,\n",
      "            to 1664,\n",
      "            strand plus,\n",
      "            id gi 34577062\n",
      "          },\n",
      "          dbxref {\n",
      "            {\n",
      "              db \"CCDS\",\n",
      "              tag str \"CCDS1624.1\"\n",
      "            }\n",
      "          }\n",
      "        }\n",
      "      }\n",
      "    }\n",
      "  }\n",
      "}\n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(handle.read()) #the output is in JSON format by default, because we did not specify the format(rettype)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 163,
   "id": "34acff17",
   "metadata": {},
   "outputs": [],
   "source": [
    "handle = Entrez.efetch(id='34577062', db='nuccore', rettype='fasta')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 164,
   "id": "32fa2bd6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ">NM_001126.2 Homo sapiens adenylosuccinate synthase (ADSS), mRNA\n",
      "GGAAGGGGCGTGGCCTCGGTCCGGGGTGGCGGCCGTTGCCGCCACCAGGGCCTCTTCCTGCGGGCGGTGC\n",
      "TGCCGAGGCCGGCCTGCGCGGGGCAGTCATGGTACCCCCTTGAGCGGGCTGTGGCGGAGAGCGGGGCGGG\n",
      "GACTGGCTGGAGGGTGGCGGCCCGGCGGGGCGGGGGCGGGGCCGGCCTCTGGCTCCTTCTTCCTCTGCAT\n",
      "GTGGCTGGCGGCCGCAGAGCAGTTCAGTTCGCTCACTCCTCGCCGGCCGCCTCTCCTTCGGGCTCTCCTC\n",
      "GCGTCACTGGAGCCATGGCGTTCGCCGAGACCTACCCGGCGGCATCCTCCCTGCCCAACGGCGATTGCGG\n",
      "CCGCCCCAGGGCGCGGCCCGGAGGAAACCGGGTGACGGTGGTGCTCGGTGCGCAGTGGGGCGACGAAGGC\n",
      "AAAGGGAAGGTGGTGGACCTGCTGGCGCAGGACGCCGACATCGTGTGCCGCTGCCAGGGAGGAAATAATG\n",
      "CTGGCCATACAGTTGTTGTGGATTCTGTGGAATATGATTTTCATCTCTTACCCAGTGGAATAATTAATCC\n",
      "AAATGTCACTGCATTCATTGGAAATGGTGTGGTAATTCATCTACCTGGATTGTTTGAAGAAGCAGAGAAA\n",
      "AATGTTCAAAAAGGAAAAGGACTAGAAGGCTGGGAAAAAAGGCTTATTATATCTGACAGAGCTCATATTG\n",
      "TATTTGATTTTCATCAAGCAGCTGATGGTATCCAGGAACAACAGAGACAAGAACAAGCAGGAAAAAATTT\n",
      "GGGTACAACAAAAAAGGGCATTGGCCCAGTTTATTCGTCCAAAGCTGCTCGGAGTGGACTCAGGATGTGC\n",
      "GACCTTGTTTCTGACTTTGATGGCTTCTCTGAGAGGTTTAAAGTTCTAGCTAACCAATACAAATCTATAT\n",
      "ACCCCACTTTGGAAATAGACATTGAAGGTGAATTACAAAAACTCAAGGGTTATATGGAAAAGATTAAACC\n",
      "AATGGTGAGAGATGGAGTTTATTTTCTATATGAGGCCCTACATGGACCACCAAAGAAAATCTTGGTAGAA\n",
      "GGTGCAAATGCAGCACTATTAGATATTGATTTTGGGACTTACCCTTTTGTAACCTCTTCAAATTGTACTG\n",
      "TTGGAGGTGTTTGTACTGGTTTGGGTATGCCACCTCAAAATGTTGGAGAAGTGTATGGAGTTGTGAAAGC\n",
      "TTATACAACTAGAGTTGGTATTGGTGCCTTTCCTACAGAGCAAGACAATGAAATTGGAGAATTATTACAA\n",
      "ACAAGGGGTAGAGAGTTTGGTGTAACTACTGGAAGGAAAAGAAGATGTGGCTGGTTGGACCTCGTTTTGC\n",
      "TCAAATATGCTCATATGATCAATGGATTTACTGCGTTGGCACTTACCAAGTTGGATATTTTGGACATGTT\n",
      "TACGGAAATCAAAGTTGGAGTTGCTTACAAGTTAGATGGTGAAATCATACCTCATATCCCAGCAAACCAA\n",
      "GAAGTCTTAAATAAAGTTGAAGTTCAATATAAGACTCTCCCAGGATGGAACACAGACATATCAAATGCAA\n",
      "GGGCGTTTAAAGAACTACCTGTTAATGCACAAAACTATGTTCGATTTATTGAAGATGAGCTTCAAATTCC\n",
      "AGTTAAGTGGATTGGTGTTGGTAAATCCAGAGAATCTATGATTCAACTCTTTTAATGATTGCCAGTAATG\n",
      "CAAGAAACACTCCTTGAGAGGGAGGGGAAAAGACTTTCTTAAATATTTCATTTATGACCTGCAAATTCAA\n",
      "GAATAAAGACACTGAAGTAAGTTTGAAGCCCTACAGTTGTTTCCAGTCTTTTCAGATGGATGCCTACTGT\n",
      "GGAGATTAACTTTGGCATATTCCAGTGTCAGCTTTCTTTAGCTGGAATTGCCAAATCATTTGTTGCTCCT\n",
      "GCTGCTCTCATGGTGCCACGTTTTTTTTTTCAATGTTTAGTAATAGTATAATCCATGTTGTTTGATATCA\n",
      "AAAGTAGAATTACTTTTAATGTAGTTTTTCTTCATTATTGTCATTGCGTGTTCTTAAGTTTTACCCCTAT\n",
      "TAGATGGTAAGAACAATTAATGCAGTTTTGCACAAATATTTTTACATTCTGATCATTCAGTTCTGTCATT\n",
      "GTAATCTTTGTTGTTAGAAACAAATGATGAAAACATAGGGGTTCTGTAAACTTTTGTAATGCTATGAATT\n",
      "CTGTTTAAATTTTGGGCTGTCTATTTTCTGCTGAAACCATGCAAAATTGAGCTTTGGTGGGGCTGGGAGG\n",
      "GGGTTATGTATTCATGGGACCTTTAATTTGTACAGAACACAGAACTTATTTCTGTCAGTTATTTAATACA\n",
      "TTGAAAATTTAGTGAAATGTTCAAAGAGAATAGATGTTTCCCAAAACAACAATCTTTATGTTAAAAATAG\n",
      "TCATTAAAAGATCTGTTGTAATATATGGTGGATATTTTTCTTTAATTTCAAACATTACCTCTGAAATGTG\n",
      "TATCTTTTCTTTTTTATCTTACCATTAATTTTAAATCTAGTGGATTGGTTTTCAACATCGTGCCTGCCGA\n",
      "TATGCCTACAGAATCATCTGTAAGTGTCAAAATGAACCCACGTTGTTAGCCATAATTTTGATTATGCCTT\n",
      "TATTTCTCCTTTCTTGAAAAAAAAAAGGTGTTATTTTGACAATTAGGCATAACATTGTTTTGTAGATTAT\n",
      "CTTTTAATGAACTATTTTAAATGTTAAATTAGGTGCCACTTAAATTTATTTTATTACACCATGAATAGCT\n",
      "GATTAAAAGAACCAAATATTTCTAGTAAAAAAAAAAAAAAAAAAA\n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(handle.read())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "id": "049d89b8",
   "metadata": {},
   "outputs": [],
   "source": [
    "handle = Entrez.efetch(id='NM_001126.2', db='nucleotide', rettype='gb', retmode='text')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 166,
   "id": "fe2ff459",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "LOCUS       NM_001126               2775 bp    mRNA    linear   PRI 10-OCT-2010\n",
      "DEFINITION  Homo sapiens adenylosuccinate synthase (ADSS), mRNA.\n",
      "ACCESSION   NM_001126\n",
      "VERSION     NM_001126.2\n",
      "KEYWORDS    RefSeq.\n",
      "SOURCE      Homo sapiens (human)\n",
      "  ORGANISM  Homo sapiens\n",
      "            Eukaryota; Metazoa; Chordata; Craniata; Vertebrata; Euteleostomi;\n",
      "            Mammalia; Eutheria; Euarchontoglires; Primates; Haplorrhini;\n",
      "            Catarrhini; Hominidae; Homo.\n",
      "REFERENCE   1  (bases 1 to 2775)\n",
      "  AUTHORS   Sivendran,S. and Colman,R.F.\n",
      "  TITLE     Effect of a new non-cleavable substrate analog on wild-type and\n",
      "            serine mutants in the signature sequence of adenylosuccinate lyase\n",
      "            of Bacillus subtilis and Homo sapiens\n",
      "  JOURNAL   Protein Sci. 17 (7), 1162-1174 (2008)\n",
      "   PUBMED   18469177\n",
      "  REMARK    GeneRIF: Kinetic data reveal that human Ser(289) and B. subtilis\n",
      "            Ser(262) and Ser(263) are essential for catalysis, while the\n",
      "            ability of these Ser mutants to bind APBADP suggests that they do\n",
      "            not contribute to substrate affinity\n",
      "REFERENCE   2  (bases 1 to 2775)\n",
      "  AUTHORS   Zhang,F., Xu,Y., Liu,P., Fan,H., Huang,X., Sun,G., Song,Y. and\n",
      "            Sham,P.C.\n",
      "  TITLE     Association analyses of the interaction between the ADSS and ATM\n",
      "            genes with schizophrenia in a Chinese population\n",
      "  JOURNAL   BMC Med. Genet. 9, 119 (2008)\n",
      "   PUBMED   19115993\n",
      "  REMARK    GeneRIF: These findings suggest that the combined effects of the\n",
      "            polymorphisms in the ADSS and ATM genes may confer susceptibility\n",
      "            to the development of schizophrenia in a Chinese population\n",
      "            GeneRIF: Observational study of gene-disease association and\n",
      "            gene-gene interaction. (HuGE Navigator)\n",
      "            Publication Status: Online-Only\n",
      "REFERENCE   3  (bases 1 to 2775)\n",
      "  AUTHORS   Zhang,F., Sham,P.C., Fan,H., Xu,Y., Huang,X., So,H., Song,Y. and\n",
      "            Liu,P.\n",
      "  TITLE     An association study of ADSS gene polymorphisms with schizophrenia\n",
      "  JOURNAL   Behav Brain Funct 4, 39 (2008)\n",
      "   PUBMED   18721483\n",
      "  REMARK    GeneRIF: Observational study of gene-disease association. (HuGE\n",
      "            Navigator)\n",
      "            Publication Status: Online-Only\n",
      "REFERENCE   4  (bases 1 to 2775)\n",
      "  AUTHORS   Sun,H., Li,N., Wang,X., Chen,T., Shi,L., Zhang,L., Wang,J., Wan,T.\n",
      "            and Cao,X.\n",
      "  TITLE     Molecular cloning and characterization of a novel muscle\n",
      "            adenylosuccinate synthetase, AdSSL1, from human bone marrow stromal\n",
      "            cells\n",
      "  JOURNAL   Mol. Cell. Biochem. 269 (1-2), 85-94 (2005)\n",
      "   PUBMED   15786719\n",
      "REFERENCE   5  (bases 1 to 2775)\n",
      "  AUTHORS   Stepinski,J., Pawelczyk,T., Bizon,D. and Angielski,S.\n",
      "  TITLE     Purine nucleotide cycle in rat renal cortex and medulla under\n",
      "            conditions that mimic normal and low oxygen supply\n",
      "  JOURNAL   Kidney Int. 50 (4), 1195-1201 (1996)\n",
      "   PUBMED   8887278\n",
      "REFERENCE   6  (bases 1 to 2775)\n",
      "  AUTHORS   Powell,S.M., Zalkin,H. and Dixon,J.E.\n",
      "  TITLE     Cloning and characterization of the cDNA encoding human\n",
      "            adenylosuccinate synthetase\n",
      "  JOURNAL   FEBS Lett. 303 (1), 4-10 (1992)\n",
      "   PUBMED   1592113\n",
      "REFERENCE   7  (bases 1 to 2775)\n",
      "  AUTHORS   Zalkin,H. and Dixon,J.E.\n",
      "  TITLE     De novo purine nucleotide biosynthesis\n",
      "  JOURNAL   Prog. Nucleic Acid Res. Mol. Biol. 42, 259-287 (1992)\n",
      "   PUBMED   1574589\n",
      "  REMARK    Review article\n",
      "REFERENCE   8  (bases 1 to 2775)\n",
      "  AUTHORS   Lai,L.W., Hart,I.M. and Patterson,D.\n",
      "  TITLE     A gene correcting the defect in the CHO mutant Ade -H, deficient in\n",
      "            a branch point enzyme (adenylosuccinate synthetase) of de novo\n",
      "            purine biosynthesis, is located on the long arm of chromosome 1\n",
      "  JOURNAL   Genomics 9 (2), 322-328 (1991)\n",
      "   PUBMED   2004783\n",
      "REFERENCE   9  (bases 1 to 2775)\n",
      "  AUTHORS   Ogawa,H., Shiraki,H., Matsuda,Y. and Nakagawa,H.\n",
      "  TITLE     Interaction of adenylosuccinate synthetase with F-actin\n",
      "  JOURNAL   Eur. J. Biochem. 85 (2), 331-337 (1978)\n",
      "   PUBMED   648524\n",
      "REFERENCE   10 (bases 1 to 2775)\n",
      "  AUTHORS   Van der Weyden,M.B. and Kelly,W.N.\n",
      "  TITLE     Human adenylosuccinate synthetase. Partial purification, kinetic\n",
      "            and regulatory properties of the enzyme from placenta\n",
      "  JOURNAL   J. Biol. Chem. 249 (22), 7282-7289 (1974)\n",
      "   PUBMED   4436310\n",
      "COMMENT     REVIEWED REFSEQ: This record has been curated by NCBI staff. The\n",
      "            reference sequence was derived from BC012356.1 and BG700800.1.\n",
      "            [WARNING] On Nov 25, 2010 this sequence was replaced by\n",
      "            NM_001126.3.\n",
      "            On Sep 11, 2003 this sequence version replaced NM_001126.1.\n",
      "            \n",
      "            Summary: Adenylosuccinate synthetase catalyzes the first committed\n",
      "            step in the conversion of IMP to AMP [provided by RefSeq].\n",
      "            COMPLETENESS: complete on the 3' end.\n",
      "FEATURES             Location/Qualifiers\n",
      "     source          1..2775\n",
      "                     /organism=\"Homo sapiens\"\n",
      "                     /mol_type=\"mRNA\"\n",
      "                     /db_xref=\"taxon:9606\"\n",
      "                     /chromosome=\"1\"\n",
      "                     /map=\"1cen-q12\"\n",
      "     gene            1..2775\n",
      "                     /gene=\"ADSS\"\n",
      "                     /gene_synonym=\"ADEH; MGC20404\"\n",
      "                     /note=\"adenylosuccinate synthase\"\n",
      "                     /db_xref=\"GeneID:159\"\n",
      "                     /db_xref=\"HGNC:HGNC:292\"\n",
      "                     /db_xref=\"HPRD:00050\"\n",
      "                     /db_xref=\"MIM:103060\"\n",
      "     CDS             295..1665\n",
      "                     /gene=\"ADSS\"\n",
      "                     /gene_synonym=\"ADEH; MGC20404\"\n",
      "                     /EC_number=\"6.3.4.4\"\n",
      "                     /note=\"adenylosuccinate synthetase\n",
      "                     (Ade(-)H-complementing); adenylosuccinate synthetase,\n",
      "                     acidic isozyme; IMP--aspartate ligase 2; adSS 2; AMPSase\n",
      "                     2; L-type adenylosuccinate synthetase; adenylosuccinate\n",
      "                     synthetase, liver isozyme\"\n",
      "                     /codon_start=1\n",
      "                     /product=\"adenylosuccinate synthetase isozyme 2\"\n",
      "                     /protein_id=\"NP_001117.2\"\n",
      "                     /db_xref=\"CCDS:CCDS1624.1\"\n",
      "                     /db_xref=\"GeneID:159\"\n",
      "                     /db_xref=\"HGNC:HGNC:292\"\n",
      "                     /db_xref=\"HPRD:00050\"\n",
      "                     /db_xref=\"MIM:103060\"\n",
      "                     /translation=\"MAFAETYPAASSLPNGDCGRPRARPGGNRVTVVLGAQWGDEGKG\n",
      "                     KVVDLLAQDADIVCRCQGGNNAGHTVVVDSVEYDFHLLPSGIINPNVTAFIGNGVVIH\n",
      "                     LPGLFEEAEKNVQKGKGLEGWEKRLIISDRAHIVFDFHQAADGIQEQQRQEQAGKNLG\n",
      "                     TTKKGIGPVYSSKAARSGLRMCDLVSDFDGFSERFKVLANQYKSIYPTLEIDIEGELQ\n",
      "                     KLKGYMEKIKPMVRDGVYFLYEALHGPPKKILVEGANAALLDIDFGTYPFVTSSNCTV\n",
      "                     GGVCTGLGMPPQNVGEVYGVVKAYTTRVGIGAFPTEQDNEIGELLQTRGREFGVTTGR\n",
      "                     KRRCGWLDLVLLKYAHMINGFTALALTKLDILDMFTEIKVGVAYKLDGEIIPHIPANQ\n",
      "                     EVLNKVEVQYKTLPGWNTDISNARAFKELPVNAQNYVRFIEDELQIPVKWIGVGKSRE\n",
      "                     SMIQLF\"\n",
      "     regulatory      2732..2737\n",
      "                     /regulatory_class=\"polyA_signal_sequence\"\n",
      "                     /gene=\"ADSS\"\n",
      "                     /gene_synonym=\"ADEH; MGC20404\"\n",
      "     polyA_site      2757\n",
      "                     /gene=\"ADSS\"\n",
      "                     /gene_synonym=\"ADEH; MGC20404\"\n",
      "ORIGIN      \n",
      "        1 ggaaggggcg tggcctcggt ccggggtggc ggccgttgcc gccaccaggg cctcttcctg\n",
      "       61 cgggcggtgc tgccgaggcc ggcctgcgcg gggcagtcat ggtaccccct tgagcgggct\n",
      "      121 gtggcggaga gcggggcggg gactggctgg agggtggcgg cccggcgggg cgggggcggg\n",
      "      181 gccggcctct ggctccttct tcctctgcat gtggctggcg gccgcagagc agttcagttc\n",
      "      241 gctcactcct cgccggccgc ctctccttcg ggctctcctc gcgtcactgg agccatggcg\n",
      "      301 ttcgccgaga cctacccggc ggcatcctcc ctgcccaacg gcgattgcgg ccgccccagg\n",
      "      361 gcgcggcccg gaggaaaccg ggtgacggtg gtgctcggtg cgcagtgggg cgacgaaggc\n",
      "      421 aaagggaagg tggtggacct gctggcgcag gacgccgaca tcgtgtgccg ctgccaggga\n",
      "      481 ggaaataatg ctggccatac agttgttgtg gattctgtgg aatatgattt tcatctctta\n",
      "      541 cccagtggaa taattaatcc aaatgtcact gcattcattg gaaatggtgt ggtaattcat\n",
      "      601 ctacctggat tgtttgaaga agcagagaaa aatgttcaaa aaggaaaagg actagaaggc\n",
      "      661 tgggaaaaaa ggcttattat atctgacaga gctcatattg tatttgattt tcatcaagca\n",
      "      721 gctgatggta tccaggaaca acagagacaa gaacaagcag gaaaaaattt gggtacaaca\n",
      "      781 aaaaagggca ttggcccagt ttattcgtcc aaagctgctc ggagtggact caggatgtgc\n",
      "      841 gaccttgttt ctgactttga tggcttctct gagaggttta aagttctagc taaccaatac\n",
      "      901 aaatctatat accccacttt ggaaatagac attgaaggtg aattacaaaa actcaagggt\n",
      "      961 tatatggaaa agattaaacc aatggtgaga gatggagttt attttctata tgaggcccta\n",
      "     1021 catggaccac caaagaaaat cttggtagaa ggtgcaaatg cagcactatt agatattgat\n",
      "     1081 tttgggactt acccttttgt aacctcttca aattgtactg ttggaggtgt ttgtactggt\n",
      "     1141 ttgggtatgc cacctcaaaa tgttggagaa gtgtatggag ttgtgaaagc ttatacaact\n",
      "     1201 agagttggta ttggtgcctt tcctacagag caagacaatg aaattggaga attattacaa\n",
      "     1261 acaaggggta gagagtttgg tgtaactact ggaaggaaaa gaagatgtgg ctggttggac\n",
      "     1321 ctcgttttgc tcaaatatgc tcatatgatc aatggattta ctgcgttggc acttaccaag\n",
      "     1381 ttggatattt tggacatgtt tacggaaatc aaagttggag ttgcttacaa gttagatggt\n",
      "     1441 gaaatcatac ctcatatccc agcaaaccaa gaagtcttaa ataaagttga agttcaatat\n",
      "     1501 aagactctcc caggatggaa cacagacata tcaaatgcaa gggcgtttaa agaactacct\n",
      "     1561 gttaatgcac aaaactatgt tcgatttatt gaagatgagc ttcaaattcc agttaagtgg\n",
      "     1621 attggtgttg gtaaatccag agaatctatg attcaactct tttaatgatt gccagtaatg\n",
      "     1681 caagaaacac tccttgagag ggaggggaaa agactttctt aaatatttca tttatgacct\n",
      "     1741 gcaaattcaa gaataaagac actgaagtaa gtttgaagcc ctacagttgt ttccagtctt\n",
      "     1801 ttcagatgga tgcctactgt ggagattaac tttggcatat tccagtgtca gctttcttta\n",
      "     1861 gctggaattg ccaaatcatt tgttgctcct gctgctctca tggtgccacg tttttttttt\n",
      "     1921 caatgtttag taatagtata atccatgttg tttgatatca aaagtagaat tacttttaat\n",
      "     1981 gtagtttttc ttcattattg tcattgcgtg ttcttaagtt ttacccctat tagatggtaa\n",
      "     2041 gaacaattaa tgcagttttg cacaaatatt tttacattct gatcattcag ttctgtcatt\n",
      "     2101 gtaatctttg ttgttagaaa caaatgatga aaacataggg gttctgtaaa cttttgtaat\n",
      "     2161 gctatgaatt ctgtttaaat tttgggctgt ctattttctg ctgaaaccat gcaaaattga\n",
      "     2221 gctttggtgg ggctgggagg gggttatgta ttcatgggac ctttaatttg tacagaacac\n",
      "     2281 agaacttatt tctgtcagtt atttaataca ttgaaaattt agtgaaatgt tcaaagagaa\n",
      "     2341 tagatgtttc ccaaaacaac aatctttatg ttaaaaatag tcattaaaag atctgttgta\n",
      "     2401 atatatggtg gatatttttc tttaatttca aacattacct ctgaaatgtg tatcttttct\n",
      "     2461 tttttatctt accattaatt ttaaatctag tggattggtt ttcaacatcg tgcctgccga\n",
      "     2521 tatgcctaca gaatcatctg taagtgtcaa aatgaaccca cgttgttagc cataattttg\n",
      "     2581 attatgcctt tatttctcct ttcttgaaaa aaaaaaggtg ttattttgac aattaggcat\n",
      "     2641 aacattgttt tgtagattat cttttaatga actattttaa atgttaaatt aggtgccact\n",
      "     2701 taaatttatt ttattacacc atgaatagct gattaaaaga accaaatatt tctagtaaaa\n",
      "     2761 aaaaaaaaaa aaaaa\n",
      "//\n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(handle.read())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "19eedebd",
   "metadata": {},
   "source": [
    "### Downloading and Exploring Sequences"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 167,
   "id": "9cc6bb39",
   "metadata": {},
   "outputs": [],
   "source": [
    "###We woll be using:\n",
    "\n",
    "#identifier = Accession Number\n",
    "#dipslayformat = fasta\n",
    "#displaymode = text\n",
    "#database = nucleotide"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 168,
   "id": "a17ad8fd",
   "metadata": {},
   "outputs": [],
   "source": [
    "handle = Entrez.efetch(id='NM_001126.2', db='nucleotide', rettype='fasta', retmode='text')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 169,
   "id": "e4ef66cf",
   "metadata": {},
   "outputs": [],
   "source": [
    "record = SeqIO.read(handle, 'fasta')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 170,
   "id": "b4faf7b3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'NM_001126.2'"
      ]
     },
     "execution_count": 170,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "record.id"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 171,
   "id": "be805ed5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'NM_001126.2'"
      ]
     },
     "execution_count": 171,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "record.name"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 172,
   "id": "e18071d1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'NM_001126.2 Homo sapiens adenylosuccinate synthase (ADSS), mRNA'"
      ]
     },
     "execution_count": 172,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "record.description"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 173,
   "id": "b11ed8cb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Seq('GGAAGGGGCGTGGCCTCGGTCCGGGGTGGCGGCCGTTGCCGCCACCAGGGCCTC...AAA')"
      ]
     },
     "execution_count": 173,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "record.seq"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 174,
   "id": "67ec632e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2775"
      ]
     },
     "execution_count": 174,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(record.seq)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 175,
   "id": "f2a85397",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Seq('GGAAGGGGCG')"
      ]
     },
     "execution_count": 175,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "record.seq[0:10]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 178,
   "id": "22e04db9",
   "metadata": {},
   "outputs": [],
   "source": [
    "handle = Entrez.efetch(db='nucleotide', id='NM_001126.2', rettype='gb', retmode='text')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 179,
   "id": "ec65b4af",
   "metadata": {},
   "outputs": [],
   "source": [
    "record = SeqIO.read(handle, 'gb')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 180,
   "id": "eb6058ee",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'NM_001126.2'"
      ]
     },
     "execution_count": 180,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "record.id"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 181,
   "id": "1865ad3b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[SeqFeature(FeatureLocation(ExactPosition(0), ExactPosition(2775), strand=1), type='source'),\n",
       " SeqFeature(FeatureLocation(ExactPosition(0), ExactPosition(2775), strand=1), type='gene'),\n",
       " SeqFeature(FeatureLocation(ExactPosition(294), ExactPosition(1665), strand=1), type='CDS'),\n",
       " SeqFeature(FeatureLocation(ExactPosition(2731), ExactPosition(2737), strand=1), type='regulatory'),\n",
       " SeqFeature(FeatureLocation(ExactPosition(2756), ExactPosition(2757), strand=1), type='polyA_site')]"
      ]
     },
     "execution_count": 181,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "record.features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 182,
   "id": "e03e2814",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Seq('GGAAGGGGCGTGGCCTCGGTCCGGGGTGGCGGCCGTTGCCGCCACCAGGGCCTC...AAA')"
      ]
     },
     "execution_count": 182,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "record.seq"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 183,
   "id": "c4bad793",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2775"
      ]
     },
     "execution_count": 183,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(record.seq)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 184,
   "id": "7d78d06e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Seq('ATTTTCTATATGAGG')"
      ]
     },
     "execution_count": 184,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "record.seq[1000:1015]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dd61045e",
   "metadata": {},
   "source": [
    "### Downloading Multiple Genomes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 203,
   "id": "35045791",
   "metadata": {},
   "outputs": [],
   "source": [
    "handle = Entrez.efetch(db='nuccore', id='34577062, 186972394', rettype='fasta')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 186,
   "id": "54686e40",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ">NM_001126.2 Homo sapiens adenylosuccinate synthase (ADSS), mRNA\n",
      "GGAAGGGGCGTGGCCTCGGTCCGGGGTGGCGGCCGTTGCCGCCACCAGGGCCTCTTCCTGCGGGCGGTGC\n",
      "TGCCGAGGCCGGCCTGCGCGGGGCAGTCATGGTACCCCCTTGAGCGGGCTGTGGCGGAGAGCGGGGCGGG\n",
      "GACTGGCTGGAGGGTGGCGGCCCGGCGGGGCGGGGGCGGGGCCGGCCTCTGGCTCCTTCTTCCTCTGCAT\n",
      "GTGGCTGGCGGCCGCAGAGCAGTTCAGTTCGCTCACTCCTCGCCGGCCGCCTCTCCTTCGGGCTCTCCTC\n",
      "GCGTCACTGGAGCCATGGCGTTCGCCGAGACCTACCCGGCGGCATCCTCCCTGCCCAACGGCGATTGCGG\n",
      "CCGCCCCAGGGCGCGGCCCGGAGGAAACCGGGTGACGGTGGTGCTCGGTGCGCAGTGGGGCGACGAAGGC\n",
      "AAAGGGAAGGTGGTGGACCTGCTGGCGCAGGACGCCGACATCGTGTGCCGCTGCCAGGGAGGAAATAATG\n",
      "CTGGCCATACAGTTGTTGTGGATTCTGTGGAATATGATTTTCATCTCTTACCCAGTGGAATAATTAATCC\n",
      "AAATGTCACTGCATTCATTGGAAATGGTGTGGTAATTCATCTACCTGGATTGTTTGAAGAAGCAGAGAAA\n",
      "AATGTTCAAAAAGGAAAAGGACTAGAAGGCTGGGAAAAAAGGCTTATTATATCTGACAGAGCTCATATTG\n",
      "TATTTGATTTTCATCAAGCAGCTGATGGTATCCAGGAACAACAGAGACAAGAACAAGCAGGAAAAAATTT\n",
      "GGGTACAACAAAAAAGGGCATTGGCCCAGTTTATTCGTCCAAAGCTGCTCGGAGTGGACTCAGGATGTGC\n",
      "GACCTTGTTTCTGACTTTGATGGCTTCTCTGAGAGGTTTAAAGTTCTAGCTAACCAATACAAATCTATAT\n",
      "ACCCCACTTTGGAAATAGACATTGAAGGTGAATTACAAAAACTCAAGGGTTATATGGAAAAGATTAAACC\n",
      "AATGGTGAGAGATGGAGTTTATTTTCTATATGAGGCCCTACATGGACCACCAAAGAAAATCTTGGTAGAA\n",
      "GGTGCAAATGCAGCACTATTAGATATTGATTTTGGGACTTACCCTTTTGTAACCTCTTCAAATTGTACTG\n",
      "TTGGAGGTGTTTGTACTGGTTTGGGTATGCCACCTCAAAATGTTGGAGAAGTGTATGGAGTTGTGAAAGC\n",
      "TTATACAACTAGAGTTGGTATTGGTGCCTTTCCTACAGAGCAAGACAATGAAATTGGAGAATTATTACAA\n",
      "ACAAGGGGTAGAGAGTTTGGTGTAACTACTGGAAGGAAAAGAAGATGTGGCTGGTTGGACCTCGTTTTGC\n",
      "TCAAATATGCTCATATGATCAATGGATTTACTGCGTTGGCACTTACCAAGTTGGATATTTTGGACATGTT\n",
      "TACGGAAATCAAAGTTGGAGTTGCTTACAAGTTAGATGGTGAAATCATACCTCATATCCCAGCAAACCAA\n",
      "GAAGTCTTAAATAAAGTTGAAGTTCAATATAAGACTCTCCCAGGATGGAACACAGACATATCAAATGCAA\n",
      "GGGCGTTTAAAGAACTACCTGTTAATGCACAAAACTATGTTCGATTTATTGAAGATGAGCTTCAAATTCC\n",
      "AGTTAAGTGGATTGGTGTTGGTAAATCCAGAGAATCTATGATTCAACTCTTTTAATGATTGCCAGTAATG\n",
      "CAAGAAACACTCCTTGAGAGGGAGGGGAAAAGACTTTCTTAAATATTTCATTTATGACCTGCAAATTCAA\n",
      "GAATAAAGACACTGAAGTAAGTTTGAAGCCCTACAGTTGTTTCCAGTCTTTTCAGATGGATGCCTACTGT\n",
      "GGAGATTAACTTTGGCATATTCCAGTGTCAGCTTTCTTTAGCTGGAATTGCCAAATCATTTGTTGCTCCT\n",
      "GCTGCTCTCATGGTGCCACGTTTTTTTTTTCAATGTTTAGTAATAGTATAATCCATGTTGTTTGATATCA\n",
      "AAAGTAGAATTACTTTTAATGTAGTTTTTCTTCATTATTGTCATTGCGTGTTCTTAAGTTTTACCCCTAT\n",
      "TAGATGGTAAGAACAATTAATGCAGTTTTGCACAAATATTTTTACATTCTGATCATTCAGTTCTGTCATT\n",
      "GTAATCTTTGTTGTTAGAAACAAATGATGAAAACATAGGGGTTCTGTAAACTTTTGTAATGCTATGAATT\n",
      "CTGTTTAAATTTTGGGCTGTCTATTTTCTGCTGAAACCATGCAAAATTGAGCTTTGGTGGGGCTGGGAGG\n",
      "GGGTTATGTATTCATGGGACCTTTAATTTGTACAGAACACAGAACTTATTTCTGTCAGTTATTTAATACA\n",
      "TTGAAAATTTAGTGAAATGTTCAAAGAGAATAGATGTTTCCCAAAACAACAATCTTTATGTTAAAAATAG\n",
      "TCATTAAAAGATCTGTTGTAATATATGGTGGATATTTTTCTTTAATTTCAAACATTACCTCTGAAATGTG\n",
      "TATCTTTTCTTTTTTATCTTACCATTAATTTTAAATCTAGTGGATTGGTTTTCAACATCGTGCCTGCCGA\n",
      "TATGCCTACAGAATCATCTGTAAGTGTCAAAATGAACCCACGTTGTTAGCCATAATTTTGATTATGCCTT\n",
      "TATTTCTCCTTTCTTGAAAAAAAAAAGGTGTTATTTTGACAATTAGGCATAACATTGTTTTGTAGATTAT\n",
      "CTTTTAATGAACTATTTTAAATGTTAAATTAGGTGCCACTTAAATTTATTTTATTACACCATGAATAGCT\n",
      "GATTAAAAGAACCAAATATTTCTAGTAAAAAAAAAAAAAAAAAAA\n",
      "\n",
      ">EU490707.1 Selenipedium aequinoctiale maturase K (matK) gene, partial cds; chloroplast\n",
      "ATTTTTTACGAACCTGTGGAAATTTTTGGTTATGACAATAAATCTAGTTTAGTACTTGTGAAACGTTTAA\n",
      "TTACTCGAATGTATCAACAGAATTTTTTGATTTCTTCGGTTAATGATTCTAACCAAAAAGGATTTTGGGG\n",
      "GCACAAGCATTTTTTTTCTTCTCATTTTTCTTCTCAAATGGTATCAGAAGGTTTTGGAGTCATTCTGGAA\n",
      "ATTCCATTCTCGTCGCAATTAGTATCTTCTCTTGAAGAAAAAAAAATACCAAAATATCAGAATTTACGAT\n",
      "CTATTCATTCAATATTTCCCTTTTTAGAAGACAAATTTTTACATTTGAATTATGTGTCAGATCTACTAAT\n",
      "ACCCCATCCCATCCATCTGGAAATCTTGGTTCAAATCCTTCAATGCCGGATCAAGGATGTTCCTTCTTTG\n",
      "CATTTATTGCGATTGCTTTTCCACGAATATCATAATTTGAATAGTCTCATTACTTCAAAGAAATTCATTT\n",
      "ACGCCTTTTCAAAAAGAAAGAAAAGATTCCTTTGGTTACTATATAATTCTTATGTATATGAATGCGAATA\n",
      "TCTATTCCAGTTTCTTCGTAAACAGTCTTCTTATTTACGATCAACATCTTCTGGAGTCTTTCTTGAGCGA\n",
      "ACACATTTATATGTAAAAATAGAACATCTTCTAGTAGTGTGTTGTAATTCTTTTCAGAGGATCCTATGCT\n",
      "TTCTCAAGGATCCTTTCATGCATTATGTTCGATATCAAGGAAAAGCAATTCTGGCTTCAAAGGGAACTCT\n",
      "TATTCTGATGAAGAAATGGAAATTTCATCTTGTGAATTTTTGGCAATCTTATTTTCACTTTTGGTCTCAA\n",
      "CCGTATAGGATTCATATAAAGCAATTATCCAACTATTCCTTCTCTTTTCTGGGGTATTTTTCAAGTGTAC\n",
      "TAGAAAATCATTTGGTAGTAAGAAATCAAATGCTAGAGAATTCATTTATAATAAATCTTCTGACTAAGAA\n",
      "ATTCGATACCATAGCCCCAGTTATTTCTCTTATTGGATCATTGTCGAAAGCTCAATTTTGTACTGTATTG\n",
      "GGTCATCCTATTAGTAAACCGATCTGGACCGATTTCTCGGATTCTGATATTCTTGATCGATTTTGCCGGA\n",
      "TATGTAGAAATCTTTGTCGTTATCACAGCGGATCCTCAAAAAAACAGGTTTTGTATCGTATAAAATATAT\n",
      "ACTTCGACTTTCGTGTGCTAGAACTTTGGCACGGAAACATAAAAGTACAGTACGCACTTTTATGCGAAGA\n",
      "TTAGGTTCGGGATTATTAGAAGAATTCTTTATGGAAGAAGAA\n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(handle.read())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 207,
   "id": "49cb8a52",
   "metadata": {},
   "outputs": [],
   "source": [
    "recordss = SeqIO.parse(handle, 'fasta') #we are using parse, not read, because we have more than 1 record"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 208,
   "id": "1d1ef308",
   "metadata": {},
   "outputs": [],
   "source": [
    "recordss = [i for i in recordss]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 209,
   "id": "b34bf23a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2"
      ]
     },
     "execution_count": 209,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(recordss)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 210,
   "id": "8676e5ac",
   "metadata": {},
   "outputs": [],
   "source": [
    "first_rec = recordss[0]\n",
    "second_rec = recordss[1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 211,
   "id": "68dfd5c6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "('NM_001126.2', 'EU490707.1')"
      ]
     },
     "execution_count": 211,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "first_rec.id, second_rec.id"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "af54fa1c",
   "metadata": {},
   "source": [
    "### Saving the files on your computer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 213,
   "id": "b71788ba",
   "metadata": {},
   "outputs": [],
   "source": [
    "# To save, you use the format:\n",
    "# SeqIO.write(record, outputname, 'fileformat')\n",
    "handle = Entrez.efetch(id='NM_001126.2', db='nucleotide', rettype='gb', retmode='text')\n",
    "record = SeqIO.read(handle, 'gb')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 216,
   "id": "7d8aee85",
   "metadata": {},
   "outputs": [],
   "source": [
    "outputname = 'gbRecFile' #if you dont want the file in thesame folder where you notebook is, then you specify the path here"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 215,
   "id": "382741ca",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1"
      ]
     },
     "execution_count": 215,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "SeqIO.write(record, outputname, 'gb')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 218,
   "id": "d0c06fcf",
   "metadata": {},
   "outputs": [],
   "source": [
    "###You can also do thesame for the fasta files"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 221,
   "id": "d316803a",
   "metadata": {},
   "outputs": [],
   "source": [
    "### For the multiple files:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 219,
   "id": "cd032a4a",
   "metadata": {},
   "outputs": [],
   "source": [
    "handle = Entrez.efetch(db='nuccore', id='34577062, 186972394', rettype='fasta')\n",
    "records = SeqIO.parse(handle, 'fasta')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 220,
   "id": "ba4b55ff",
   "metadata": {},
   "outputs": [],
   "source": [
    "output_names = 'gbRecFileMATK'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 222,
   "id": "32179e98",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2"
      ]
     },
     "execution_count": 222,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "SeqIO.write(records, output_names, 'fasta') ###the output is 2, because we have 2 files there"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f640d984",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
